{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar Error = function Error(_ref) {\n  var statusCode = _ref.statusCode;\n  return __jsx(\"p\", null, statusCode ? \"An error \".concat(statusCode, \" occurred on server\") : 'An error occurred on client');\n};\n\nError.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var res, err, statusCode;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            res = _ref2.res, err = _ref2.err;\n            statusCode = res ? res.statusCode : err ? err.statusCode : 404;\n            return _context.abrupt(\"return\", {\n              statusCode: statusCode\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Error;","map":{"version":3,"sources":["/Users/daiwei/pr/react-website-next/pages/_error.tsx"],"names":["Error","statusCode","getInitialProps","res","err"],"mappings":";;;;;AAIA,IAAMA,KAAyB,GAAG,SAA5BA,KAA4B,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACpD,SACE,iBACGA,UAAU,sBACKA,UADL,2BAEP,6BAHN,CADF;AAOD,CARD;;AAUAD,KAAK,CAACE,eAAN;AAAA,uEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,SAASA,GAAT,EAAcC,GAAd,SAAcA,GAAd;AAChBH,YAAAA,UADgB,GACHE,GAAG,GAAGA,GAAG,CAACF,UAAP,GAAoBG,GAAG,GAAGA,GAAG,CAACH,UAAP,GAAoB,GAD3C;AAAA,6CAEf;AAAEA,cAAAA,UAAU,EAAVA;AAAF,aAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeD,KAAf","sourcesContent":["import {\n  NextPage\n} from 'next'\n\nconst Error: NextPage<any, any> = ({ statusCode }) => {\n  return (\n    <p>\n      {statusCode\n        ? `An error ${statusCode} occurred on server`\n        : 'An error occurred on client'}\n    </p>\n  )\n}\n\nError.getInitialProps = async ({ res, err }) => {\n  const statusCode = res ? res.statusCode : err ? err.statusCode : 404\n  return { statusCode }\n}\n\nexport default Error"]},"metadata":{},"sourceType":"module"}