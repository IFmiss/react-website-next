{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/daiwei/pr/react-website-next/components/Audio/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useRef, useImperativeHandle, useMemo, useEffect } from 'react';\nimport cls from 'classnames';\nimport './audio.less';\nimport NextIcon from './next.svg';\nimport PauseIcon from './pause.svg';\nimport PlayIcon from './play.svg';\nimport { throttle } from './utils';\nvar DEFAULT_PLAY_INFO = {\n  name: 'sunmmer',\n  disc: 'hollo sunmmer',\n  url: 'https://www.daiwei.site/static/music/background.mp3',\n  coverUrl: 'https://www.daiwei.site/static/logo/sunmmer.jpg'\n};\n\nvar Daudio = function Daudio(_ref, ref) {\n  var _cls2, _cls5;\n\n  var _ref$style = _ref.style,\n      style = _ref$style === void 0 ? 'circle' : _ref$style,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'handle' : _ref$type,\n      _ref$playType = _ref.playType,\n      playType = _ref$playType === void 0 ? 'sequential-play' : _ref$playType,\n      _ref$playList = _ref.playList,\n      playList = _ref$playList === void 0 ? [DEFAULT_PLAY_INFO] : _ref$playList,\n      handle = _ref.handle,\n      onNext = _ref.onNext;\n\n  var _useState = useState(false),\n      playing = _useState[0],\n      setPlaying = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(0),\n      progress = _useState3[0],\n      setProgress = _useState3[1];\n\n  var _useState4 = useState(style),\n      audioStyle = _useState4[0],\n      setAudioStyle = _useState4[1];\n\n  var _useState5 = useState(playType),\n      playTypeState = _useState5[0],\n      setPlayTypeState = _useState5[1];\n\n  var _useState6 = useState(type),\n      audioTypeState = _useState6[0],\n      setAudioTypeState = _useState6[1];\n\n  var eventQueue = useRef(null);\n\n  var _useState7 = useState(0),\n      playIndex = _useState7[0],\n      setPlayIndex = _useState7[1];\n\n  var _useState8 = useState(playList),\n      playQueue = _useState8[0],\n      setPlayQueue = _useState8[1];\n\n  var _useState9 = useState(true),\n      muted = _useState9[0],\n      setMuted = _useState9[1];\n\n  var audioRef = useRef(null);\n  var isHandle = useMemo(function () {\n    return audioTypeState === 'handle';\n  }, [audioTypeState]);\n  var currentPlayList = useMemo(function () {\n    return audioTypeState === 'handle' ? playQueue[0] : playQueue[playIndex];\n  }, [playIndex, playQueue[0]]);\n  var isLoop = useMemo(function () {\n    return playTypeState === 'loop-play';\n  }, [playTypeState]);\n\n  var checkAudioType = function checkAudioType() {\n    if (audioStyle === 'rect') {\n      setAudioStyle(function (audioStyle) {\n        return audioStyle = 'circle';\n      });\n    } else {\n      setAudioStyle(function (audioStyle) {\n        return audioStyle = 'rect';\n      });\n    }\n  };\n\n  useEffect(function () {\n    audioRef.current.addEventListener('timeupdate', onAudioTimeUpdate);\n    handle && initHandle(handle);\n    return function () {\n      audioRef.current.removeEventListener('timeupdate', onAudioTimeUpdate);\n    };\n  }, []);\n\n  var initHandle = function initHandle(handle) {\n    // 注册事件\n    var handleKeys = handle && Object.keys(handle);\n    handleKeys && handleKeys.forEach(function (item) {\n      addEvent(item, handle && handle[item] || function () {});\n    });\n  };\n\n  var setStyle = function setStyle(t) {\n    setAudioStyle(t);\n  };\n\n  var handlePlayPause = function handlePlayPause(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    playing ? pause() : play();\n  };\n\n  var pause = function pause() {\n    var _audioRef$current;\n\n    (_audioRef$current = audioRef.current) === null || _audioRef$current === void 0 ? void 0 : _audioRef$current.pause();\n    setPlaying(false);\n  };\n\n  var play = function play() {\n    var _audioRef$current2;\n\n    (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.play();\n    setPlaying(true);\n  };\n\n  var next = function next(e) {\n    e.stopPropagation();\n    e.preventDefault(); // setHandleList(audioInfo)\n\n    if (isHandle) {\n      // next事件\n      var eventHandler = eventQueue.current;\n      onNext && onNext(); // console.log(eventHandler?.onNext)\n      // eventHandler?.onNext?.map(item => item.call(null))\n\n      return;\n    }\n\n    checkNextByList();\n  };\n\n  var setAudioType = function setAudioType(t) {\n    setAudioTypeState(t);\n  };\n\n  var playByIndex = function playByIndex(index) {\n    setPlayIndex(index);\n    play();\n  };\n  /**\n   * 列表切换下一首\n   */\n\n\n  var checkNextByList = function checkNextByList() {\n    console.log('by-list');\n    console.log(playQueue);\n    var l = playQueue.length;\n\n    if (l === 1) {\n      load();\n      play();\n      return;\n    } // 随机\n\n\n    if (playType === 'random-play') {\n      playByIndex(~~(Math.random() * playQueue.length));\n    } else {\n      // 列表\n      console.log('playIndexplayIndex', playIndex);\n      var index = playIndex >= l - 1 ? 0 : playIndex + 1;\n      playByIndex(index);\n    }\n  };\n  /**\n   * type 为 handle 时可调用\n   * @param nextAudio 切换下一首 \n   */\n\n\n  var cut = function cut(nextAudio) {\n    console.log(isHandle);\n\n    if (!isHandle) {\n      throw Error(\"The \\u3010cut\\u3011 method can only be executed when the type is handle\");\n    }\n\n    load();\n    setPlayQueue([nextAudio]);\n    play();\n  };\n\n  var setPlayList = function setPlayList(list) {\n    setPlayQueue(list);\n  };\n\n  var setPlayType = function setPlayType(t) {\n    setPlayTypeState(t);\n  };\n\n  var start = function start() {};\n\n  var ended = function ended() {\n    console.log(eventQueue);\n    console.log('ended');\n  };\n\n  var load = function load() {\n    var _audioRef$current3;\n\n    (_audioRef$current3 = audioRef.current) === null || _audioRef$current3 === void 0 ? void 0 : _audioRef$current3.load();\n  };\n\n  var onAudioPlay = function onAudioPlay() {\n    if (muted) {\n      setMuted(false);\n    } // other fn\n\n  };\n  /**\n   * 添加事件\n   */\n\n\n  var addEvent = function addEvent(name, fn) {\n    var obj = {};\n    var eventHandler = eventQueue.current;\n    obj[name] = eventHandler && eventHandler[name] && eventHandler[name].length ? [].concat(_toConsumableArray(eventHandler[name]), [fn]) : [fn];\n    eventQueue.current = Object.assign({}, eventHandler, obj);\n  };\n\n  var url = currentPlayList.url,\n      coverUrl = currentPlayList.coverUrl,\n      name = currentPlayList.name,\n      disc = currentPlayList.disc;\n  console.log(currentPlayList);\n  var mainClass = cls(_defineProperty({}, \"d-audio\", true));\n  var classWrapper = cls((_cls2 = {}, _defineProperty(_cls2, mainClass, true), _defineProperty(_cls2, audioStyle, true), _defineProperty(_cls2, \"show\", true), _cls2));\n  var classCricle = cls(_defineProperty({}, \"d-audio-circle\", true));\n  var classPlayPause = cls(_defineProperty({}, \"d-audio-play-pause\", true));\n  var classLoading = cls((_cls5 = {}, _defineProperty(_cls5, \"d-audio-loading\", true), _defineProperty(_cls5, \"active\", loading), _cls5));\n  var blurStyle = {\n    backgroundImage: \"url(\".concat(coverUrl, \")\"),\n    backgroundSize: 'cover',\n    backgroundPosition: 'center center'\n  };\n  var rangeStyle = {\n    border: \"3px solid red\"\n  };\n  var progressStyle = {\n    backgroundImage: \"linear-gradient(to right, red 30%, blue)\",\n    width: \"\".concat(progress, \"%\")\n  };\n  var onAudioTimeUpdate = throttle(function (e) {\n    var _audioRef$current4, _audioRef$current5;\n\n    setProgress(~~((((_audioRef$current4 = audioRef.current) === null || _audioRef$current4 === void 0 ? void 0 : _audioRef$current4.currentTime) || 0) / (((_audioRef$current5 = audioRef.current) === null || _audioRef$current5 === void 0 ? void 0 : _audioRef$current5.duration) || 1) * 100));\n  }, 1000);\n\n  var renderCricle = function renderCricle() {\n    return __jsx(\"div\", {\n      className: classCricle,\n      title: \"\".concat(name, \" - \").concat(disc),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      className: \"\".concat(classCricle),\n      crossOrigin: \"anonymous\",\n      src: coverUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"\".concat(classCricle, \"-range\"),\n      style: rangeStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }));\n  };\n\n  useImperativeHandle(ref, function () {\n    return {\n      start: start,\n      next: next,\n      play: play,\n      pause: pause,\n      addEvent: addEvent,\n      setStyle: setStyle,\n      cut: cut,\n      setAudioType: setAudioType,\n      setPlayList: setPlayList,\n      setPlayType: setPlayType\n    };\n  });\n\n  var renderRect = function renderRect() {\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"\".concat(mainClass, \"-detail\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"\".concat(mainClass, \"-detail-config\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classPlayPause,\n      onClick: handlePlayPause,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, playing ? __jsx(PauseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }) : __jsx(PlayIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"d-audio-next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, __jsx(NextIcon, {\n      onClick: next,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"\".concat(mainClass, \"-detail-info\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      className: \"\".concat(mainClass, \"-detail-info-name\"),\n      title: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, name), __jsx(\"div\", {\n      className: \"\".concat(mainClass, \"-detail-info-disc\"),\n      title: disc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, disc))), __jsx(\"div\", {\n      className: \"\".concat(mainClass, \"-blur-bg\"),\n      style: blurStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: classLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"\".concat(mainClass, \"-progress\"),\n      style: progressStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: classWrapper,\n    onClick: checkAudioType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389\n    },\n    __self: this\n  }, renderCricle(), renderRect(), __jsx(\"audio\", {\n    className: \"\".concat(mainClass, \"-ele\"),\n    src: url,\n    ref: audioRef,\n    muted: muted,\n    loop: isLoop,\n    onPlay: onAudioPlay,\n    onEnded: ended,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392\n    },\n    __self: this\n  }));\n}; // export default Daudio\n// const AudioComponent = React.forwardRef(Daudio)\n// function AudioInstance(props: Exclude<IDaudioProps, 'playInfo'>): IDAudio {\n//   const AudioRef = React.createRef<IDAudioRef>()\n//   const div = document.createElement('div')\n//   document.body.appendChild(div)\n//   const a = ReactDOM.render(<AudioComponent {...props} ref={AudioRef}></AudioComponent>, div)\n//   console.log('div', div)\n//   console.log('a', a)\n//   console.log('AudioRef.current', AudioRef.current)\n//   const destroy = () => {\n//     const unmountResult = ReactDOM.unmountComponentAtNode(div)\n//     unmountResult && div.parentNode?.removeChild(div)\n//   }\n//   return {\n//     ...AudioRef.current as IDAudioRef,\n//     destroy\n//   }\n// }\n\n\nexport default Audio;","map":{"version":3,"sources":["/Users/daiwei/pr/react-website-next/components/Audio/index.tsx"],"names":["React","useState","useRef","useImperativeHandle","useMemo","useEffect","cls","NextIcon","PauseIcon","PlayIcon","throttle","DEFAULT_PLAY_INFO","name","disc","url","coverUrl","Daudio","ref","style","type","playType","playList","handle","onNext","playing","setPlaying","loading","setLoading","progress","setProgress","audioStyle","setAudioStyle","playTypeState","setPlayTypeState","audioTypeState","setAudioTypeState","eventQueue","playIndex","setPlayIndex","playQueue","setPlayQueue","muted","setMuted","audioRef","isHandle","currentPlayList","isLoop","checkAudioType","current","addEventListener","onAudioTimeUpdate","initHandle","removeEventListener","handleKeys","Object","keys","forEach","item","addEvent","setStyle","t","handlePlayPause","e","stopPropagation","preventDefault","pause","play","next","eventHandler","checkNextByList","setAudioType","playByIndex","index","console","log","l","length","load","Math","random","cut","nextAudio","Error","setPlayList","list","setPlayType","start","ended","onAudioPlay","fn","obj","assign","mainClass","classWrapper","classCricle","classPlayPause","classLoading","blurStyle","backgroundImage","backgroundSize","backgroundPosition","rangeStyle","border","progressStyle","width","currentTime","duration","renderCricle","renderRect","Audio"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useImperativeHandle, useMemo, useEffect } from 'react'\nimport cls from 'classnames'\nimport './audio.less'\nimport NextIcon from './next.svg'\nimport PauseIcon from './pause.svg'\nimport PlayIcon from './play.svg'\nimport ReactDOM from 'react-dom'\nimport {\n  throttle\n} from './utils'\n\nexport type EventType = 'onEnded' | 'onNext'\n\ntype AddEventFn = (name: EventType, cb: Function) => void\n\ntype DaudioStyle = 'rect' | 'circle'\n\ntype DaudioEventType = {\n  [props in EventType]?: Function\n}\n\ntype DaudioEventTypeQueue = {\n  [props in EventType]: Array<Function>\n} | null\n\nexport interface IDaudioPalyInfo {\n  url: string;\n  coverUrl: string;\n  name: string;\n  disc: string;\n}\n\nexport type DaudioType = 'list' | 'handle'\n\nexport type DaudioPlayType = 'sequential-play' | 'random-play' | 'loop-play'\n\nexport interface IDaudioProps {\n  style?: DaudioStyle;\n  type?: DaudioType;\n  playType?: DaudioPlayType;\n  playList?: Array<IDaudioPalyInfo>;\n  handle?: DaudioEventType;\n  onNext?: () => void;\n}\n\nexport interface IDAudioRef {\n  /**\n   * 初始化，显示audio组件\n   */\n  start: () => void;\n\n  /**\n   * 下一首\n   */\n  next: (e: Event) => void;\n  // next: (nextAudio: IDaudioPalyInfo) => void;\n  cut: (nextAudio: IDaudioPalyInfo) => void;\n\n  /**\n   * 播放\n   */\n  play: () => void;\n\n  /**\n   * 暂停\n   */\n  pause: () => void;\n\n  /**\n   * 设置audio的类型。⭕️还是方形\n   */\n  setStyle: (t: DaudioStyle) => void;\n\n  /**\n   * 设置播放形式 默认是handle\n   */\n  setAudioType: (t: DaudioType) => void;\n\n  /**\n   * 设置播放类型\n   */\n  setPlayType: (t: DaudioPlayType) => void;\n\n  /**\n   * 设置播放列表\n   */\n  setPlayList: (playlist: Array<IDaudioPalyInfo>) => void;\n\n  /**\n   * 设置事件监听\n   */\n  addEvent: AddEventFn;\n}\n\nexport interface IDAudio extends IDAudioRef {\n  destroy: () => void;\n}\n\nconst DEFAULT_PLAY_INFO = {\n  name: 'sunmmer',\n  disc: 'hollo sunmmer',\n  url: 'https://www.daiwei.site/static/music/background.mp3',\n  coverUrl: 'https://www.daiwei.site/static/logo/sunmmer.jpg'\n}\n\nconst Daudio: React.ForwardRefRenderFunction<IDAudioRef, IDaudioProps> = ({\n  style = 'circle',\n  type = 'handle',\n  playType = 'sequential-play',\n  playList = [DEFAULT_PLAY_INFO],\n  handle,\n  onNext\n}, ref) => {\n  const [playing, setPlaying] = useState<boolean>(false)\n  const [loading, setLoading] = useState<boolean>(false)\n  const [progress, setProgress] = useState<number>(0)\n  const [audioStyle, setAudioStyle] = useState<DaudioStyle>(style)\n  const [playTypeState, setPlayTypeState] = useState<DaudioPlayType>(playType)\n  const [audioTypeState, setAudioTypeState] = useState<DaudioType>(type)\n  const eventQueue = useRef<DaudioEventTypeQueue>(null)\n\n  const [playIndex, setPlayIndex] = useState<number>(0)\n  const [playQueue, setPlayQueue] = useState<Array<IDaudioPalyInfo>>(playList)\n\n  const [muted, setMuted] = useState<boolean>(true)\n\n  const audioRef = useRef<HTMLAudioElement>(null)\n\n  const isHandle = useMemo(() => {\n    return audioTypeState === 'handle'\n  }, [audioTypeState])\n\n  const currentPlayList = useMemo(() => {\n    return audioTypeState === 'handle' ? playQueue[0] : playQueue[playIndex]\n  }, [playIndex, playQueue[0]])\n\n  const isLoop = useMemo(() => {\n    return playTypeState === 'loop-play'\n  }, [playTypeState])\n\n  const checkAudioType = () => {\n    if (audioStyle === 'rect') {\n      setAudioStyle((audioStyle) => audioStyle = 'circle')\n    } else {\n      setAudioStyle((audioStyle) => audioStyle = 'rect')\n    }\n  }\n\n  useEffect(() => {\n    (audioRef.current  as any).addEventListener('timeupdate', onAudioTimeUpdate);\n    handle && initHandle(handle)\n\n    return () => {\n      (audioRef.current as any).removeEventListener('timeupdate', onAudioTimeUpdate)\n    }\n  }, [])\n\n  const initHandle = (handle: DaudioEventType) => {\n    // 注册事件\n    const handleKeys = handle && Object.keys(handle)\n    handleKeys && (handleKeys as Array<EventType>).forEach((item) => {\n      addEvent(item, handle && handle[item] || function(){})\n    })\n  }\n\n  const setStyle = (t: DaudioStyle) => {\n    setAudioStyle(t)\n  }\n\n  const handlePlayPause = (e: any) => {\n    e.stopPropagation()\n    e.preventDefault()\n    playing ? pause() : play()\n  }\n\n  const pause = () => {\n    audioRef.current?.pause()\n    setPlaying(false)\n  }\n\n  const play = () => {\n    audioRef.current?.play()\n    setPlaying(true)\n  }\n\n  const next = (e: Event) => {\n    e.stopPropagation()\n    e.preventDefault()\n    // setHandleList(audioInfo)\n    if (isHandle) {\n      // next事件\n      const eventHandler = eventQueue.current\n      onNext && onNext()\n      // console.log(eventHandler?.onNext)\n      // eventHandler?.onNext?.map(item => item.call(null))\n      return\n    }\n    checkNextByList()\n  }\n\n  const setAudioType = (t: DaudioType) => {\n    setAudioTypeState(t)\n  }\n\n  const playByIndex = (index: number) => {\n    setPlayIndex(index)\n    play()\n  }\n\n  /**\n   * 列表切换下一首\n   */\n  const checkNextByList = () => {\n    console.log('by-list')\n    console.log(playQueue)\n    const l = playQueue.length\n    if (l === 1) {\n      load()\n      play()\n      return\n    }\n    // 随机\n    if (playType === 'random-play') {\n      playByIndex(~~((Math.random() * playQueue.length)))\n    } else {\n      // 列表\n      console.log('playIndexplayIndex', playIndex)\n      const index = playIndex >= l - 1 ? 0 : playIndex + 1\n      playByIndex(index)\n    }\n  }\n\n  /**\n   * type 为 handle 时可调用\n   * @param nextAudio 切换下一首 \n   */\n  const cut = (nextAudio: IDaudioPalyInfo) => {\n    console.log(isHandle)\n    if (!isHandle) {\n      throw Error(`The 【cut】 method can only be executed when the type is handle`)\n    }\n    load()\n    setPlayQueue([nextAudio])\n    play()\n  }\n\n  const setPlayList = (list: Array<IDaudioPalyInfo>) => {\n    setPlayQueue(list)\n  }\n\n  const setPlayType = (t: DaudioPlayType) => {\n    setPlayTypeState(t)\n  }\n\n  const start = () => {\n  }\n\n  const ended = () => {\n    console.log(eventQueue)\n    console.log('ended')\n  }\n\n  const load = () => {\n    audioRef.current?.load()\n  }\n\n  const onAudioPlay = () => {\n    if (muted) {\n      setMuted(false)\n    }\n    // other fn\n  }\n\n  /**\n   * 添加事件\n   */\n  const addEvent = (name: EventType, fn: Function) => {\n    let obj = {} as any\n    const eventHandler = eventQueue.current\n    obj[name] = eventHandler && eventHandler[name] && eventHandler[name].length\n                  ? ([...eventHandler[name], fn]) : [fn]\n    eventQueue.current = Object.assign({}, eventHandler, obj)\n  }\n\n  const {\n    url,\n    coverUrl,\n    name,\n    disc\n  } = currentPlayList\n  console.log(currentPlayList)\n\n  const mainClass = cls({\n    [`d-audio`]: true,\n  })\n\n  const classWrapper = cls({\n    [mainClass]: true,\n    [audioStyle]: true,\n    [`show`]: true\n  })\n\n  const classCricle = cls({\n    [`d-audio-circle`]: true\n  })\n\n  const classPlayPause = cls({\n    [`d-audio-play-pause`]: true,\n    // [`play`]: playing,\n    // [`pause`]: !playing\n  })\n\n  const classLoading = cls({\n    [`d-audio-loading`]: true,\n    [`active`]: loading\n  })\n\n  const blurStyle = {\n    backgroundImage: `url(${coverUrl})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center center'\n  }\n\n  const rangeStyle = {\n    border: `3px solid red`\n  }\n\n  const progressStyle = {\n    backgroundImage: `linear-gradient(to right, red 30%, blue)`,\n    width: `${progress}%`\n  }\n\n  const onAudioTimeUpdate = throttle((e: React.SyntheticEvent<HTMLAudioElement, Event>) => {\n    setProgress(~~((audioRef.current?.currentTime || 0) / (audioRef.current?.duration || 1) * 100))\n  }, 1000)\n\n  const renderCricle = () => {\n    return (\n      <div className={classCricle}\n           title={`${name} - ${disc}`}>\n        <img className={`${classCricle}`} crossOrigin = \"anonymous\" src={coverUrl}/>\n        <div className={`${classCricle}-range`} style={rangeStyle}></div>\n      </div>\n    )\n  }\n\n  useImperativeHandle(ref, () => ({\n    start,\n    next,\n    play,\n    pause,\n    addEvent,\n    setStyle,\n    cut,\n    setAudioType,\n    setPlayList,\n    setPlayType\n  }));\n\n  const renderRect = () => (\n    <React.Fragment>\n      <div className={`${mainClass}-detail`}>\n        <div className={`${mainClass}-detail-config`}>\n          <div className={classPlayPause} onClick={handlePlayPause}>\n            {\n              playing ? (\n                <PauseIcon></PauseIcon>\n              ) : (\n                <PlayIcon></PlayIcon>\n              )\n            }\n          </div>\n          <div className=\"d-audio-next\">\n            <NextIcon onClick={next}></NextIcon>\n          </div>\n        </div>\n        <div className={`${mainClass}-detail-info`}>\n          <h3 className={`${mainClass}-detail-info-name`} title={name}>{name}</h3>\n          <div className={`${mainClass}-detail-info-disc`} title={disc}>{disc}</div>\n        </div>\n      </div>\n      <div className={`${mainClass}-blur-bg`} style={blurStyle}></div>\n      <div className={classLoading}></div>\n      <div className={`${mainClass}-progress`} style={progressStyle}></div>\n    </React.Fragment>\n  )\n\n  return (\n    <div className={classWrapper} onClick={checkAudioType}>\n      { renderCricle() }\n      { renderRect() }\n      <audio className={`${mainClass}-ele`}\n             src={url}\n             ref={audioRef}\n             muted={muted}\n             loop={isLoop}\n             onPlay={onAudioPlay}\n             onEnded={ended}></audio>\n    </div>\n  )\n}\n\n// export default Daudio\n// const AudioComponent = React.forwardRef(Daudio)\n\n// function AudioInstance(props: Exclude<IDaudioProps, 'playInfo'>): IDAudio {\n//   const AudioRef = React.createRef<IDAudioRef>()\n\n//   const div = document.createElement('div')\n//   document.body.appendChild(div)\n\n//   const a = ReactDOM.render(<AudioComponent {...props} ref={AudioRef}></AudioComponent>, div)\n//   console.log('div', div)\n//   console.log('a', a)\n//   console.log('AudioRef.current', AudioRef.current)\n  \n//   const destroy = () => {\n//     const unmountResult = ReactDOM.unmountComponentAtNode(div)\n//     unmountResult && div.parentNode?.removeChild(div)\n//   }\n\n//   return {\n//     ...AudioRef.current as IDAudioRef,\n//     destroy\n//   }\n// }\n\nexport default Audio\n"]},"metadata":{},"sourceType":"module"}