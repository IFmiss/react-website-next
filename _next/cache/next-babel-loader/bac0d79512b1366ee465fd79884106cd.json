{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/daiwei/pr/react-website-next/components/Music/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport cls from 'classnames';\nimport http from '@utils/req';\nimport { MUSIC_DETAIL } from '@constance/api';\nimport './music.less';\nimport loadable from '@loadable/component';\nvar Ripple = loadable(function () {\n  return import('ripple-button');\n});\n\nvar Music = function Music() {\n  var _useState = useState([]),\n      tracksLists = _useState[0],\n      setTracksLists = _useState[1];\n\n  var classString = cls('music-sider-wrapper');\n  useEffect(function () {\n    getMusic(2179377798);\n  }, []);\n\n  var getMusic = function getMusic(id) {\n    var res, tracks;\n    return _regeneratorRuntime.async(function getMusic$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(http.get(\"\".concat(MUSIC_DETAIL, \"?id=\").concat(id)));\n\n          case 2:\n            res = _context.sent;\n            tracks = res.data.playlist.tracks;\n            setTracksLists(tracks);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var checkMusic = function checkMusic(item) {};\n\n  var formatMusicArtists = function formatMusicArtists(artists) {\n    return artists.map(function (artist) {\n      return artist.name;\n    }).join(', ');\n  };\n\n  var getUrlById = function getUrlById(id) {\n    return \"//music.163.com/song/media/outer/url?id=\".concat(id, \".mp3\");\n  };\n\n  return __jsx(\"div\", {\n    className: classString,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    className: \"\".concat(classString, \"-title\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"\\u97F3\\u4E50\"), __jsx(\"div\", {\n    className: \"\".concat(classString, \"-content\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, tracksLists && tracksLists.map(function (item, index) {\n    return __jsx(Ripple, {\n      key: index,\n      color: \"rgba(99, 99, 99, 0.3)\",\n      onClick: checkMusic,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, item.name));\n  })));\n};\n\nexport default Music;","map":{"version":3,"sources":["/Users/daiwei/pr/react-website-next/components/Music/index.tsx"],"names":["React","useEffect","useState","cls","http","MUSIC_DETAIL","loadable","Ripple","Music","tracksLists","setTracksLists","classString","getMusic","id","get","res","tracks","data","playlist","checkMusic","item","formatMusicArtists","artists","map","artist","name","join","getUrlById","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAO,cAAP;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAIA,IAAMC,MAAM,GAAGD,QAAQ,CAAC;AAAA,SAAM,OAAO,eAAP,CAAN;AAAA,CAAD,CAAvB;;AAEA,IAAME,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,kBACoBN,QAAQ,CAAM,EAAN,CAD5B;AAAA,MACXO,WADW;AAAA,MACEC,cADF;;AAElB,MAAMC,WAAW,GAAGR,GAAG,CAAC,qBAAD,CAAvB;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,QAAQ,CAAC,UAAD,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,QAAQ,GAAG,SAAXA,QAAW,CAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACGT,IAAI,CAACU,GAAL,WAAYT,YAAZ,iBAA+BQ,EAA/B,EADH;;AAAA;AACTE,YAAAA,GADS;AAEKC,YAAAA,MAFL,GAEkBD,GAAG,CAACE,IAFtB,CAEPC,QAFO,CAEKF,MAFL;AAGfN,YAAAA,cAAc,CAACM,MAAD,CAAd;;AAHe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAMA,MAAMG,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAe,CAEjC,CAFD;;AAIA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD,EAAsB;AAC/C,WAAOA,OAAO,CAACC,GAAR,CAAY,UAACC,MAAD;AAAA,aAAoBA,MAAM,CAACC,IAA3B;AAAA,KAAZ,EAA6CC,IAA7C,CAAkD,IAAlD,CAAP;AACD,GAFD;;AAIA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACd,EAAD,EAAgB;AACjC,6DAAkDA,EAAlD;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAEF,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,YAAKA,WAAL,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAK,IAAA,SAAS,YAAKA,WAAL,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIF,WAAW,IAAIA,WAAW,CAACc,GAAZ,CAAgB,UAACH,IAAD,EAAkCQ,KAAlC;AAAA,WAC7B,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,KAAb;AACQ,MAAA,KAAK,EAAC,uBADd;AAEQ,MAAA,OAAO,EAAET,UAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,IAAI,CAACK,IAAV,CAHF,CAD6B;AAAA,GAAhB,CAFnB,CAFF,CADF;AAgBD,CA1CD;;AA4CA,eAAejB,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport cls from 'classnames'\nimport http from '@utils/req'\nimport { MUSIC_DETAIL } from '@constance/api'\nimport './music.less'\nimport loadable from '@loadable/component'\nimport {\n  artists\n} from './types'\nconst Ripple = loadable(() => import('ripple-button'))\n\nconst Music = () => {\n  const [tracksLists, setTracksLists] = useState<any>([])\n  const classString = cls('music-sider-wrapper')\n\n  useEffect(() => {\n    getMusic(2179377798)\n  }, [])\n\n  const getMusic = async (id: number) => {\n    const res = await http.get(`${MUSIC_DETAIL}?id=${id}`)\n    const { playlist: { tracks } } = res.data\n    setTracksLists(tracks)\n  }\n\n  const checkMusic = (item: any) => {\n\n  }\n\n  const formatMusicArtists = (artists: artists) => {\n    return artists.map((artist: artist) => artist.name).join(', ')\n  }\n\n  const getUrlById = (id: number) => {\n    return `//music.163.com/song/media/outer/url?id=${id}.mp3`\n  }  \n\n  return (\n    <div className={classString}>\n      <p className={`${classString}-title`}>音乐</p>\n      <div className={`${classString}-content`}>\n        {\n          tracksLists && tracksLists.map((item: { name: React.ReactNode }, index: number) => (\n            <Ripple key={index}\n                    color='rgba(99, 99, 99, 0.3)'\n                    onClick={checkMusic}>\n              <li>{item.name}</li>\n            </Ripple>\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Music\n"]},"metadata":{},"sourceType":"module"}