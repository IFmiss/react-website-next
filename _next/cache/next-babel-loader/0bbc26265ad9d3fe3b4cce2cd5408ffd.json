{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/daiwei/pr/react-website-next/pages/blog/detail/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Layout from '@components/Layout';\nimport { ARTICLE_DETAIL } from '@constance/api';\nimport classNames from 'classnames';\nimport { PROJECT_NAME } from '@constance/index';\nimport http from '@utils/req';\nimport ReactMarkdown from 'react-markdown';\nimport './detail.less';\nimport CodeBlock from \"@components/CodeBlock\";\nimport Link from 'next/link';\nimport LazyLoad from 'react-lazyload';\nimport MainAction from '@root/store/actions/index';\nimport { connect } from 'react-redux';\nimport ReactDOM from 'react-dom';\n\nvar BlogDetail = function BlogDetail(props) {\n  var detail = props.detail,\n      prev = props.prev,\n      next = props.next;\n  var classString = classNames(_defineProperty({}, \"\".concat(PROJECT_NAME, \"-blog-detail\"), true)); // useEffect(() => {\n  //   renderImage()\n  // }, [])\n\n  var renderImage = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var Zmage, imgs, lists;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Zmage = require('react-zmage')[\"default\"];\n              imgs = Array.from(document.querySelectorAll('.react-next-web-blog-detail img'));\n              lists = imgs.map(function (item) {\n                return {\n                  src: item.getAttribute('src') || '',\n                  alt: \"图片的占位文字，作为图片的标题, 请尽量保持简短\",\n                  className: 'testClassName'\n                };\n              });\n              console.log(lists);\n              imgs.forEach(function (item, index) {\n                var _item$parentNode;\n\n                var _lists$index = lists[index],\n                    src = _lists$index.src,\n                    alt = _lists$index.alt;\n                var ele = document.createElement('p');\n                ele.className = 'image-wrapper';\n                var wrapperEle = item.parentNode && item.parentNode.insertBefore(ele, item);\n                (_item$parentNode = item.parentNode) === null || _item$parentNode === void 0 ? void 0 : _item$parentNode.removeChild(item);\n                ReactDOM.render(__jsx(React.Fragment, null, __jsx(LazyLoad, {\n                  placeholder: __jsx(\"img\", {\n                    className: \"title-header-logo\",\n                    src: \"https://www.daiwei.site/static/logo/dw.png\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 86\n                    },\n                    __self: this\n                  }),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 84\n                  },\n                  __self: this\n                }, __jsx(Zmage, {\n                  src: src,\n                  alt: alt,\n                  set: lists,\n                  defaultPage: index,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 92\n                  },\n                  __self: this\n                }))), wrapperEle);\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function renderImage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return detail && detail.id ? __jsx(Layout, {\n    title: detail.name,\n    desc: detail.desc,\n    keywords: detail.keywords,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classString,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"\".concat(classString, \"-title\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, detail.name), __jsx(ReactMarkdown, {\n    source: detail.content,\n    escapeHtml: true,\n    skipHtml: true,\n    renderers: {\n      code: CodeBlock\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"\".concat(classString, \"-entry\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, prev && prev.id ? __jsx(Link, {\n    href: \"/blog/detail?id=\".concat(prev.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"\".concat(classString, \"-entry-prev\"),\n    title: prev.name || '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, prev.name ? \"\\u4E0A\\u4E00\\u7BC7 : \".concat(prev.name) : '')) : null, next && next.id ? __jsx(Link, {\n    href: \"/blog/detail?id=\".concat(next.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"\".concat(classString, \"-entry-next\"),\n    title: next.name || '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, next.name ? \"\\u4E0B\\u4E00\\u7BC7 : \".concat(next.name) : '')) : null))) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"\\u52A0\\u8F7D\\u4E2D...\");\n};\n\n_c = BlogDetail;\n\nBlogDetail.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ctx) {\n    var id, _yield$http$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            id = ctx.query.id;\n            _context2.next = 3;\n            return http.get(\"\".concat(ARTICLE_DETAIL, \"/\").concat(id));\n\n          case 3:\n            _yield$http$get = _context2.sent;\n            data = _yield$http$get.data;\n            return _context2.abrupt(\"return\", {\n              detail: data.result && data.result.detail || {},\n              next: data.result && data.result.next || null,\n              prev: data.result && data.result.prev || null\n            });\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar mapState = function mapState(state) {\n  return {\n    containerEle: state.base.containerEle\n  };\n};\n\nvar mapDispatch = MainAction;\nexport default connect(mapState, mapDispatch)(BlogDetail);\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogDetail\");","map":{"version":3,"sources":["/Users/daiwei/pr/react-website-next/pages/blog/detail/index.tsx"],"names":["React","Layout","ARTICLE_DETAIL","classNames","PROJECT_NAME","http","ReactMarkdown","CodeBlock","Link","LazyLoad","MainAction","connect","ReactDOM","BlogDetail","props","detail","prev","next","classString","renderImage","Zmage","require","imgs","Array","from","document","querySelectorAll","lists","map","item","src","getAttribute","alt","className","console","log","forEach","index","ele","createElement","wrapperEle","parentNode","insertBefore","removeChild","render","id","name","desc","keywords","content","code","getInitialProps","ctx","query","get","data","result","mapState","state","containerEle","base","mapDispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AAIA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SACEC,cADF,QAEO,gBAFP;AAGA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SACEC,YADF,QAEO,kBAFP;AAGA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAKA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AA8BA,IAAMC,UAAyC,GAAG,SAA5CA,UAA4C,CAACC,KAAD,EAAW;AAAA,MACnDC,MADmD,GAC5BD,KAD4B,CACnDC,MADmD;AAAA,MAC3CC,IAD2C,GAC5BF,KAD4B,CAC3CE,IAD2C;AAAA,MACrCC,IADqC,GAC5BH,KAD4B,CACrCG,IADqC;AAE3D,MAAMC,WAAW,GAAGf,UAAU,+BACxBC,YADwB,mBACK,IADL,EAA9B,CAF2D,CAM3D;AACA;AACA;;AAEA,MAAMe,WAAW;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,cAAAA,KADY,GACJC,OAAO,CAAC,aAAD,CAAP,WADI;AAEZC,cAAAA,IAFY,GAELC,KAAK,CAACC,IAAN,CAAWC,QAAQ,CAACC,gBAAT,CAA0B,iCAA1B,CAAX,CAFK;AAGZC,cAAAA,KAHY,GAGJL,IAAI,CAACM,GAAL,CAAS,UAAAC,IAAI;AAAA,uBACzB;AACEC,kBAAAA,GAAG,EAAED,IAAI,CAACE,YAAL,CAAkB,KAAlB,KAA4B,EADnC;AAEEC,kBAAAA,GAAG,EAAE,0BAFP;AAGEC,kBAAAA,SAAS,EAAE;AAHb,iBADyB;AAAA,eAAb,CAHI;AAUlBC,cAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACAL,cAAAA,IAAI,CAACc,OAAL,CAAa,UAACP,IAAD,EAAOQ,KAAP,EAAiB;AAAA;;AAAA,mCACPV,KAAK,CAACU,KAAD,CADE;AAAA,oBACpBP,GADoB,gBACpBA,GADoB;AAAA,oBACfE,GADe,gBACfA,GADe;AAE5B,oBAAMM,GAAG,GAAGb,QAAQ,CAACc,aAAT,CAAuB,GAAvB,CAAZ;AACAD,gBAAAA,GAAG,CAACL,SAAJ,GAAgB,eAAhB;AACA,oBAAMO,UAAU,GAAGX,IAAI,CAACY,UAAL,IAAmBZ,IAAI,CAACY,UAAL,CAAgBC,YAAhB,CAA6BJ,GAA7B,EAAkCT,IAAlC,CAAtC;AACA,oCAAAA,IAAI,CAACY,UAAL,sEAAiBE,WAAjB,CAA6Bd,IAA7B;AACAjB,gBAAAA,QAAQ,CAACgC,MAAT,CACE,4BACE,MAAC,QAAD;AACE,kBAAA,WAAW,EACT;AACE,oBAAA,SAAS,EAAC,mBADZ;AAEE,oBAAA,GAAG,EAAC,4CAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAQE,MAAC,KAAD;AAAO,kBAAA,GAAG,EAAEd,GAAZ;AACI,kBAAA,GAAG,EAAEE,GADT;AAEI,kBAAA,GAAG,EAAEL,KAFT;AAGI,kBAAA,WAAW,EAAEU,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,CADF,CADF,EAkBEG,UAlBF;AAoBD,eA1BD;;AAXkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXrB,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAwCA,SAEIJ,MAAM,IAAIA,MAAM,CAAC8B,EAAjB,GACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE9B,MAAM,CAAC+B,IAAtB;AAA4B,IAAA,IAAI,EAAE/B,MAAM,CAACgC,IAAzC;AAA+C,IAAA,QAAQ,EAAEhC,MAAM,CAACiC,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE9B,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,YAAKA,WAAL,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCH,MAAM,CAAC+B,IAA/C,CADF,EAEE,MAAC,aAAD;AACE,IAAA,MAAM,EAAE/B,MAAM,CAACkC,OADjB;AAEE,IAAA,UAAU,EAAE,IAFd;AAGE,IAAA,QAAQ,EAAE,IAHZ;AAIE,IAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE3C;AADG,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE;AAAK,IAAA,SAAS,YAAKW,WAAL,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIF,IAAI,IAAIA,IAAI,CAAC6B,EAAb,GACE,MAAC,IAAD;AAAM,IAAA,IAAI,4BAAqB7B,IAAI,CAAC6B,EAA1B,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,YAAK3B,WAAL,gBAAZ;AACI,IAAA,KAAK,EAAEF,IAAI,CAAC8B,IAAL,IAAa,EADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI9B,IAAI,CAAC8B,IAAL,kCAAqB9B,IAAI,CAAC8B,IAA1B,IAAmC,EAFvC,CADF,CADF,GAOI,IATR,EAYI7B,IAAI,IAAIA,IAAI,CAAC4B,EAAb,GACE,MAAC,IAAD;AAAM,IAAA,IAAI,4BAAqB5B,IAAI,CAAC4B,EAA1B,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,YAAK3B,WAAL,gBAAZ;AACI,IAAA,KAAK,EAAED,IAAI,CAAC6B,IAAL,IAAa,EADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI7B,IAAI,CAAC6B,IAAL,kCAAqB7B,IAAI,CAAC6B,IAA1B,IAAmC,EAFvC,CADF,CADF,GAOI,IAnBR,CATF,CADF,CADF,GAoCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAtCN;AA0CD,CA5FD;;KAAMjC,U;;AA8FNA,UAAU,CAACsC,eAAX;AAAA,uEAA6B,kBAAOC,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnBP,YAAAA,EADmB,GACXO,GAAG,CAACC,KADO,CACnBR,EADmB;AAAA;AAAA,mBAEJxC,IAAI,CAACiD,GAAL,WAAYpD,cAAZ,cAA8B2C,EAA9B,EAFI;;AAAA;AAAA;AAEnBU,YAAAA,IAFmB,mBAEnBA,IAFmB;AAAA,8CAGpB;AACLxC,cAAAA,MAAM,EAAEwC,IAAI,CAACC,MAAL,IAAeD,IAAI,CAACC,MAAL,CAAYzC,MAA3B,IAAqC,EADxC;AAELE,cAAAA,IAAI,EAAEsC,IAAI,CAACC,MAAL,IAAeD,IAAI,CAACC,MAAL,CAAYvC,IAA3B,IAAmC,IAFpC;AAGLD,cAAAA,IAAI,EAAEuC,IAAI,CAACC,MAAL,IAAeD,IAAI,CAACC,MAAL,CAAYxC,IAA3B,IAAmC;AAHpC,aAHoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA;;AAUA,IAAMyC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAoB;AACnCC,IAAAA,YAAY,EAAED,KAAK,CAACE,IAAN,CAAWD;AADU,GAApB;AAAA,CAAjB;;AAIA,IAAME,WAAW,GAAGnD,UAApB;AAEA,eAAeC,OAAO,CAAC8C,QAAD,EAAWI,WAAX,CAAP,CAA+BhD,UAA/B,CAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport {\n  NextPage\n} from 'next'\nimport Layout from '@components/Layout'\nimport {\n  ARTICLE_DETAIL\n} from '@constance/api'\nimport classNames from 'classnames'\nimport {\n  PROJECT_NAME\n} from '@constance/index'\nimport http from '@utils/req'\nimport ReactMarkdown from 'react-markdown'\nimport './detail.less'\nimport CodeBlock from \"@components/CodeBlock\";\nimport Link from 'next/link'\nimport LazyLoad from 'react-lazyload'\n\nimport { \n  IStore\n} from '@store/types';\nimport MainAction from '@root/store/actions/index'\nimport { connect } from 'react-redux'\nimport ReactDOM from 'react-dom'\n\ninterface IBlogListCategorieOrTag {\n  id: string;\n  name: string;\n}\n\ninterface IBlogDetail {\n  id: string;\n  name: string;\n  readCount: string;\n  editDate: string;\n  createDate: string;\n  tagLists: IBlogListCategorieOrTag[];\n  content: string;\n  keywords?: string;\n  desc?: string;\n}\n\ninterface IBlogPrevNext {\n  id: string | null;\n  name: string | null;\n}\n\ninterface BlogDetailProps {\n  detail: IBlogDetail,\n  next: IBlogPrevNext,\n  prev: IBlogPrevNext\n}\n\nconst BlogDetail: NextPage<BlogDetailProps, {}> = (props) => {\n  const { detail, prev, next } = props\n  const classString = classNames({\n    [`${PROJECT_NAME}-blog-detail`]: true\n  })\n\n  // useEffect(() => {\n  //   renderImage()\n  // }, [])\n\n  const renderImage = async () => {\n    const Zmage = require('react-zmage').default\n    const imgs = Array.from(document.querySelectorAll('.react-next-web-blog-detail img'))\n    const lists = imgs.map(item => (\n      {\n        src: item.getAttribute('src') || '',\n        alt: \"图片的占位文字，作为图片的标题, 请尽量保持简短\",\n        className: 'testClassName'\n      }\n    ))\n    console.log(lists)\n    imgs.forEach((item, index) => {\n      const { src, alt } = lists[index]\n      const ele = document.createElement('p')\n      ele.className = 'image-wrapper'\n      const wrapperEle = item.parentNode && item.parentNode.insertBefore(ele, item)\n      item.parentNode?.removeChild(item)\n      ReactDOM.render(\n        <>\n          <LazyLoad\n            placeholder={\n              <img\n                className=\"title-header-logo\"\n                src=\"https://www.daiwei.site/static/logo/dw.png\"\n              />\n            }\n          >\n            <Zmage src={src}\n                alt={alt}\n                set={lists}\n                defaultPage={index}\n                >\n            </Zmage>\n          </LazyLoad>\n        </>,\n        wrapperEle as Element\n      )\n    })\n  }\n\n  return (\n    (\n      detail && detail.id ? (\n        <Layout title={detail.name} desc={detail.desc} keywords={detail.keywords}>\n          <div className={classString}>\n            <h1 className={`${classString}-title`}>{detail.name}</h1>\n            <ReactMarkdown\n              source={detail.content}\n              escapeHtml={true}\n              skipHtml={true}\n              renderers={{\n                code: CodeBlock\n              }}/>\n            <div className={`${classString}-entry`}>\n              {\n                prev && prev.id ? (\n                  <Link href={`/blog/detail?id=${prev.id}`}>\n                    <a className={`${classString}-entry-prev`}\n                        title={prev.name || ''}>\n                      { prev.name ? `上一篇 : ${prev.name}` : '' }\n                    </a>\n                  </Link>\n                ) : null\n              }\n              {\n                next && next.id ? (\n                  <Link href={`/blog/detail?id=${next.id}`}>\n                    <a className={`${classString}-entry-next`}\n                        title={next.name || ''}>\n                      { next.name ? `下一篇 : ${next.name}` : '' }\n                    </a>\n                  </Link >\n                ) : null\n              }\n            </div>\n          </div>\n        </Layout>\n      ) : (\n        <div>加载中...</div>\n      )\n    )\n  )\n}\n\nBlogDetail.getInitialProps = async (ctx) => {\n  const { id }  = ctx.query\n  const { data } = await http.get(`${ARTICLE_DETAIL}/${id}`)\n  return {\n    detail: data.result && data.result.detail || {},\n    next: data.result && data.result.next || null,\n    prev: data.result && data.result.prev || null\n  }\n}\n\nconst mapState = (state: IStore) => ({ \n  containerEle: state.base.containerEle\n })\n\nconst mapDispatch = MainAction\n\nexport default connect(mapState, mapDispatch)(BlogDetail)\n"]},"metadata":{},"sourceType":"module"}