{"ast":null,"code":"var _jsxFileName = \"/Users/daiwei/pr/react-website-next/components/Audio/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useRef, useImperativeHandle, useMemo, useEffect } from 'react';\nimport cls from 'classnames';\nimport './audio.less';\nimport NextIcon from './next.svg';\nimport PauseIcon from './pause.svg';\nimport PlayIcon from './play.svg';\nimport ReactDOM from 'react-dom';\nimport { throttle } from './utils';\nconst DEFAULT_PLAY_INFO = {\n  name: 'sunmmer',\n  disc: 'hollo sunmmer',\n  url: 'https://www.daiwei.site/static/music/background.mp3',\n  coverUrl: 'https://www.daiwei.site/static/logo/sunmmer.jpg'\n};\n\nconst Daudio = ({\n  style = 'circle',\n  type = 'handle',\n  playType = 'sequential-play',\n  playList = [DEFAULT_PLAY_INFO]\n}, ref) => {\n  const {\n    0: playing,\n    1: setPlaying\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: progress,\n    1: setProgress\n  } = useState(0);\n  const {\n    0: audioStyle,\n    1: setAudioStyle\n  } = useState(style);\n  const {\n    0: playTypeState,\n    1: setPlayTypeState\n  } = useState(playType);\n  const {\n    0: audioTypeState,\n    1: setAudioTypeState\n  } = useState(type);\n  const eventQueue = useRef(null);\n  const {\n    0: playIndex,\n    1: setPlayIndex\n  } = useState(0);\n  const {\n    0: playQueue,\n    1: setPlayQueue\n  } = useState(playList);\n  const {\n    0: muted,\n    1: setMuted\n  } = useState(true);\n  const audioRef = useRef(null);\n  const isHandle = useMemo(() => {\n    return audioTypeState === 'handle';\n  }, [audioTypeState]);\n  const currentPlayList = useMemo(() => {\n    return audioTypeState === 'handle' ? playQueue[0] : playQueue[playIndex];\n  }, [playIndex, playQueue[0]]);\n  const isLoop = useMemo(() => {\n    return playTypeState === 'loop-play';\n  }, [playTypeState]);\n\n  const checkAudioType = () => {\n    if (audioStyle === 'rect') {\n      setAudioStyle(audioStyle => audioStyle = 'circle');\n    } else {\n      setAudioStyle(audioStyle => audioStyle = 'rect');\n    }\n  };\n\n  useEffect(() => {\n    audioRef.current.addEventListener('timeupdate', onAudioTimeUpdate);\n    return () => {\n      audioRef.current.removeEventListener('timeupdate', onAudioTimeUpdate);\n    };\n  }, []);\n\n  const setStyle = t => {\n    setAudioStyle(t);\n  };\n\n  const handlePlayPause = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    playing ? pause() : play();\n  };\n\n  const pause = () => {\n    var _audioRef$current;\n\n    (_audioRef$current = audioRef.current) === null || _audioRef$current === void 0 ? void 0 : _audioRef$current.pause();\n    setPlaying(false);\n  };\n\n  const play = () => {\n    var _audioRef$current2;\n\n    (_audioRef$current2 = audioRef.current) === null || _audioRef$current2 === void 0 ? void 0 : _audioRef$current2.play();\n    setPlaying(true);\n  };\n\n  const next = e => {\n    e.stopPropagation();\n    e.preventDefault(); // setHandleList(audioInfo)\n\n    if (isHandle) {\n      var _eventHandler$onNext;\n\n      console.log('by-handle'); // next事件\n\n      const eventHandler = eventQueue.current;\n      eventHandler === null || eventHandler === void 0 ? void 0 : (_eventHandler$onNext = eventHandler.onNext) === null || _eventHandler$onNext === void 0 ? void 0 : _eventHandler$onNext.map(item => item.call(null));\n      return;\n    }\n\n    checkNextByList();\n  };\n\n  const setAudioType = t => {\n    setAudioTypeState(t);\n  };\n\n  const playByIndex = index => {\n    setPlayIndex(index);\n    play();\n  };\n  /**\n   * 列表切换下一首\n   */\n\n\n  const checkNextByList = () => {\n    console.log('by-list');\n    console.log(playQueue);\n    const l = playQueue.length;\n\n    if (l === 1) {\n      load();\n      play();\n      return;\n    } // 随机\n\n\n    if (playType === 'random-play') {\n      playByIndex(~~(Math.random() * playQueue.length));\n    } else {\n      // 列表\n      console.log('playIndexplayIndex', playIndex);\n      const index = playIndex >= l - 1 ? 0 : playIndex + 1;\n      playByIndex(index);\n    }\n  };\n  /**\n   * type 为 handle 时可调用\n   * @param nextAudio 切换下一首 \n   */\n\n\n  const cut = nextAudio => {\n    console.log(isHandle);\n\n    if (!isHandle) {\n      throw Error(`The 【cut】 method can only be executed when the type is handle`);\n    }\n\n    load();\n    setPlayQueue([nextAudio]);\n    play();\n  };\n\n  const setPlayList = list => {\n    setPlayQueue(list);\n  };\n\n  const setPlayType = t => {\n    setPlayTypeState(t);\n  };\n\n  const start = () => {};\n\n  const ended = () => {\n    console.log(eventQueue);\n    console.log('ended');\n  };\n\n  const load = () => {\n    var _audioRef$current3;\n\n    (_audioRef$current3 = audioRef.current) === null || _audioRef$current3 === void 0 ? void 0 : _audioRef$current3.load();\n  };\n\n  const onAudioPlay = () => {\n    if (muted) {\n      setMuted(false);\n    } // other fn\n\n  };\n  /**\n   * 添加事件\n   */\n\n\n  const addEvent = (name, fn) => {\n    let obj = {};\n    const eventHandler = eventQueue.current;\n    obj[name] = eventHandler && eventHandler[name] && eventHandler[name].length ? [...eventHandler[name], fn] : [fn];\n    eventQueue.current = Object.assign({}, eventHandler, obj);\n  };\n\n  const {\n    url,\n    coverUrl,\n    name,\n    disc\n  } = currentPlayList;\n  console.log(currentPlayList);\n  const mainClass = cls({\n    [`d-audio`]: true\n  });\n  const classWrapper = cls({\n    [mainClass]: true,\n    [audioStyle]: true,\n    [`show`]: true\n  });\n  const classCricle = cls({\n    [`d-audio-circle`]: true\n  });\n  const classPlayPause = cls({\n    [`d-audio-play-pause`]: true // [`play`]: playing,\n    // [`pause`]: !playing\n\n  });\n  const classLoading = cls({\n    [`d-audio-loading`]: true,\n    [`active`]: loading\n  });\n  const blurStyle = {\n    backgroundImage: `url(${coverUrl})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center center'\n  };\n  const rangeStyle = {\n    border: `3px solid red`\n  };\n  const progressStyle = {\n    backgroundImage: `linear-gradient(to right, red 30%, blue)`,\n    width: `${progress}%`\n  };\n  const onAudioTimeUpdate = throttle(e => {\n    var _audioRef$current4, _audioRef$current5;\n\n    setProgress(~~((((_audioRef$current4 = audioRef.current) === null || _audioRef$current4 === void 0 ? void 0 : _audioRef$current4.currentTime) || 0) / (((_audioRef$current5 = audioRef.current) === null || _audioRef$current5 === void 0 ? void 0 : _audioRef$current5.duration) || 1) * 100));\n  }, 1000);\n\n  const renderCricle = () => {\n    return __jsx(\"div\", {\n      className: classCricle,\n      title: `${name} - ${disc}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      className: `${classCricle}`,\n      crossOrigin: \"anonymous\",\n      src: coverUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: `${classCricle}-range`,\n      style: rangeStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }));\n  };\n\n  useImperativeHandle(ref, () => ({\n    start,\n    next,\n    play,\n    pause,\n    addEvent,\n    setStyle,\n    cut,\n    setAudioType,\n    setPlayList,\n    setPlayType\n  }));\n\n  const renderRect = () => __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: `${mainClass}-detail`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: `${mainClass}-detail-config`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classPlayPause,\n    onClick: handlePlayPause,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351\n    },\n    __self: this\n  }, playing ? __jsx(PauseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  }) : __jsx(PlayIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"d-audio-next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360\n    },\n    __self: this\n  }, __jsx(NextIcon, {\n    onClick: next,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: `${mainClass}-detail-info`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: `${mainClass}-detail-info-name`,\n    title: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  }, name), __jsx(\"div\", {\n    className: `${mainClass}-detail-info-disc`,\n    title: disc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  }, disc))), __jsx(\"div\", {\n    className: `${mainClass}-blur-bg`,\n    style: blurStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: `${mainClass}-progress`,\n    style: progressStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371\n    },\n    __self: this\n  }));\n\n  return __jsx(\"div\", {\n    className: classWrapper,\n    onClick: checkAudioType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376\n    },\n    __self: this\n  }, renderCricle(), renderRect(), __jsx(\"audio\", {\n    className: `${mainClass}-ele`,\n    src: url,\n    ref: audioRef,\n    muted: muted,\n    loop: isLoop,\n    onPlay: onAudioPlay,\n    onEnded: ended,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  }));\n}; // export default Daudio\n\n\nconst AudioComponent = React.forwardRef(Daudio);\n\nfunction AudioInstance(props) {\n  const AudioRef = React.createRef();\n  const div = document.createElement('div');\n  document.body.appendChild(div);\n  ReactDOM.render(__jsx(AudioComponent, _extends({}, props, {\n    ref: AudioRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399\n    },\n    __self: this\n  })), div);\n\n  const destroy = () => {\n    var _div$parentNode;\n\n    const unmountResult = ReactDOM.unmountComponentAtNode(div);\n    unmountResult && ((_div$parentNode = div.parentNode) === null || _div$parentNode === void 0 ? void 0 : _div$parentNode.removeChild(div));\n  };\n\n  return _objectSpread({}, AudioRef.current, {\n    destroy\n  });\n}\n\nexport default AudioInstance;","map":{"version":3,"sources":["/Users/daiwei/pr/react-website-next/components/Audio/index.tsx"],"names":["React","useState","useRef","useImperativeHandle","useMemo","useEffect","cls","NextIcon","PauseIcon","PlayIcon","ReactDOM","throttle","DEFAULT_PLAY_INFO","name","disc","url","coverUrl","Daudio","style","type","playType","playList","ref","playing","setPlaying","loading","setLoading","progress","setProgress","audioStyle","setAudioStyle","playTypeState","setPlayTypeState","audioTypeState","setAudioTypeState","eventQueue","playIndex","setPlayIndex","playQueue","setPlayQueue","muted","setMuted","audioRef","isHandle","currentPlayList","isLoop","checkAudioType","current","addEventListener","onAudioTimeUpdate","removeEventListener","setStyle","t","handlePlayPause","e","stopPropagation","preventDefault","pause","play","next","console","log","eventHandler","onNext","map","item","call","checkNextByList","setAudioType","playByIndex","index","l","length","load","Math","random","cut","nextAudio","Error","setPlayList","list","setPlayType","start","ended","onAudioPlay","addEvent","fn","obj","Object","assign","mainClass","classWrapper","classCricle","classPlayPause","classLoading","blurStyle","backgroundImage","backgroundSize","backgroundPosition","rangeStyle","border","progressStyle","width","currentTime","duration","renderCricle","renderRect","AudioComponent","forwardRef","AudioInstance","props","AudioRef","createRef","div","document","createElement","body","appendChild","render","destroy","unmountResult","unmountComponentAtNode","parentNode","removeChild"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useImperativeHandle, useMemo, useEffect } from 'react'\nimport cls from 'classnames'\nimport './audio.less'\nimport NextIcon from './next.svg'\nimport PauseIcon from './pause.svg'\nimport PlayIcon from './play.svg'\nimport ReactDOM from 'react-dom'\nimport {\n  throttle\n} from './utils'\n\nexport type EventType = 'onEnded' | 'onNext'\n\ntype AddEventFn = (name: EventType, cb: Function) => void\n\ntype DaudioStyle = 'rect' | 'circle'\n\ntype DaudioEventType = {\n  [props in EventType]?: Function\n}\n\ntype DaudioEventTypeQueue = {\n  [props in EventType]: Array<Function>\n} | null\n\nexport interface IDaudioPalyInfo {\n  url: string;\n  coverUrl: string;\n  name: string;\n  disc: string;\n}\n\nexport type DaudioType = 'list' | 'handle'\n\nexport type DaudioPlayType = 'sequential-play' | 'random-play' | 'loop-play'\n\nexport interface IDaudioProps {\n  style?: DaudioStyle;\n  type?: DaudioType;\n  playType?: DaudioPlayType;\n  playList?: Array<IDaudioPalyInfo>;\n  handle?: DaudioEventType;\n}\n\nexport interface IDAudioRef {\n  /**\n   * 初始化，显示audio组件\n   */\n  start: () => void;\n\n  /**\n   * 下一首\n   */\n  next: (e: Event) => void;\n  // next: (nextAudio: IDaudioPalyInfo) => void;\n  cut: (nextAudio: IDaudioPalyInfo) => void;\n\n  /**\n   * 播放\n   */\n  play: () => void;\n\n  /**\n   * 暂停\n   */\n  pause: () => void;\n\n  /**\n   * 设置audio的类型。⭕️还是方形\n   */\n  setStyle: (t: DaudioStyle) => void;\n\n  /**\n   * 设置播放形式 默认是handle\n   */\n  setAudioType: (t: DaudioType) => void;\n\n  /**\n   * 设置播放类型\n   */\n  setPlayType: (t: DaudioPlayType) => void;\n\n  /**\n   * 设置播放列表\n   */\n  setPlayList: (playlist: Array<IDaudioPalyInfo>) => void;\n\n  /**\n   * 设置事件监听\n   */\n  addEvent: AddEventFn\n}\n\nexport interface IDAudio extends IDAudioRef {\n  destory: () => void;\n}\n\nconst DEFAULT_PLAY_INFO = {\n  name: 'sunmmer',\n  disc: 'hollo sunmmer',\n  url: 'https://www.daiwei.site/static/music/background.mp3',\n  coverUrl: 'https://www.daiwei.site/static/logo/sunmmer.jpg'\n}\n\nconst Daudio: React.ForwardRefRenderFunction<IDAudioRef, IDaudioProps> = ({\n  style = 'circle',\n  type = 'handle',\n  playType = 'sequential-play',\n  playList = [DEFAULT_PLAY_INFO],\n}, ref) => {\n  const [playing, setPlaying] = useState<boolean>(false)\n  const [loading, setLoading] = useState<boolean>(false)\n  const [progress, setProgress] = useState<number>(0)\n  const [audioStyle, setAudioStyle] = useState<DaudioStyle>(style)\n  const [playTypeState, setPlayTypeState] = useState<DaudioPlayType>(playType)\n  const [audioTypeState, setAudioTypeState] = useState<DaudioType>(type)\n  const eventQueue = useRef<DaudioEventTypeQueue>(null)\n\n  const [playIndex, setPlayIndex] = useState<number>(0)\n  const [playQueue, setPlayQueue] = useState<Array<IDaudioPalyInfo>>(playList)\n\n  const [muted, setMuted] = useState<boolean>(true)\n\n  const audioRef = useRef<HTMLAudioElement>(null)\n\n  const isHandle = useMemo(() => {\n    return audioTypeState === 'handle'\n  }, [audioTypeState])\n\n  const currentPlayList = useMemo(() => {\n    return audioTypeState === 'handle' ? playQueue[0] : playQueue[playIndex]\n  }, [playIndex, playQueue[0]])\n\n  const isLoop = useMemo(() => {\n    return playTypeState === 'loop-play'\n  }, [playTypeState])\n\n  const checkAudioType = () => {\n    if (audioStyle === 'rect') {\n      setAudioStyle((audioStyle) => audioStyle = 'circle')\n    } else {\n      setAudioStyle((audioStyle) => audioStyle = 'rect')\n    }\n  }\n\n  useEffect(() => {\n    (audioRef.current  as any).addEventListener('timeupdate', onAudioTimeUpdate);\n\n    return () => {\n      (audioRef.current as any).removeEventListener('timeupdate', onAudioTimeUpdate)\n    }\n  }, [])\n\n  const setStyle = (t: DaudioStyle) => {\n    setAudioStyle(t)\n  }\n\n  const handlePlayPause = (e: any) => {\n    e.stopPropagation()\n    e.preventDefault()\n    playing ? pause() : play()\n  }\n\n  const pause = () => {\n    audioRef.current?.pause()\n    setPlaying(false)\n  }\n\n  const play = () => {\n    audioRef.current?.play()\n    setPlaying(true)\n  }\n\n  const next = (e: Event) => {\n    e.stopPropagation()\n    e.preventDefault()\n    // setHandleList(audioInfo)\n    if (isHandle) {\n      console.log('by-handle')\n      // next事件\n      const eventHandler = eventQueue.current\n      eventHandler?.onNext?.map(item => item.call(null))\n      return\n    }\n    checkNextByList()\n  }\n\n  const setAudioType = (t: DaudioType) => {\n    setAudioTypeState(t)\n  }\n\n  const playByIndex = (index: number) => {\n    setPlayIndex(index)\n    play()\n  }\n\n  /**\n   * 列表切换下一首\n   */\n  const checkNextByList = () => {\n    console.log('by-list')\n    console.log(playQueue)\n    const l = playQueue.length\n    if (l === 1) {\n      load()\n      play()\n      return\n    }\n    // 随机\n    if (playType === 'random-play') {\n      playByIndex(~~((Math.random() * playQueue.length)))\n    } else {\n      // 列表\n      console.log('playIndexplayIndex', playIndex)\n      const index = playIndex >= l - 1 ? 0 : playIndex + 1\n      playByIndex(index)\n    }\n  }\n\n  /**\n   * type 为 handle 时可调用\n   * @param nextAudio 切换下一首 \n   */\n  const cut = (nextAudio: IDaudioPalyInfo) => {\n    console.log(isHandle)\n    if (!isHandle) {\n      throw Error(`The 【cut】 method can only be executed when the type is handle`)\n    }\n    load()\n    setPlayQueue([nextAudio])\n    play()\n  }\n\n  const setPlayList = (list: Array<IDaudioPalyInfo>) => {\n    setPlayQueue(list)\n  }\n\n  const setPlayType = (t: DaudioPlayType) => {\n    setPlayTypeState(t)\n  }\n\n  const start = () => {\n  }\n\n  const ended = () => {\n    console.log(eventQueue)\n    console.log('ended')\n  }\n\n  const load = () => {\n    audioRef.current?.load()\n  }\n\n  const onAudioPlay = () => {\n    if (muted) {\n      setMuted(false)\n    }\n    // other fn\n  }\n\n  /**\n   * 添加事件\n   */\n  const addEvent = (name: EventType, fn: Function) => {\n    let obj = {} as any\n    const eventHandler = eventQueue.current\n    obj[name] = eventHandler && eventHandler[name] && eventHandler[name].length\n                  ? ([...eventHandler[name], fn]) : [fn]\n    eventQueue.current = Object.assign({}, eventHandler, obj)\n  }\n\n  const {\n    url,\n    coverUrl,\n    name,\n    disc\n  } = currentPlayList\n  console.log(currentPlayList)\n\n  const mainClass = cls({\n    [`d-audio`]: true,\n  })\n\n  const classWrapper = cls({\n    [mainClass]: true,\n    [audioStyle]: true,\n    [`show`]: true\n  })\n\n  const classCricle = cls({\n    [`d-audio-circle`]: true\n  })\n\n  const classPlayPause = cls({\n    [`d-audio-play-pause`]: true,\n    // [`play`]: playing,\n    // [`pause`]: !playing\n  })\n\n  const classLoading = cls({\n    [`d-audio-loading`]: true,\n    [`active`]: loading\n  })\n\n  const blurStyle = {\n    backgroundImage: `url(${coverUrl})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center center'\n  }\n\n  const rangeStyle = {\n    border: `3px solid red`\n  }\n\n  const progressStyle = {\n    backgroundImage: `linear-gradient(to right, red 30%, blue)`,\n    width: `${progress}%`\n  }\n\n  const onAudioTimeUpdate = throttle((e: React.SyntheticEvent<HTMLAudioElement, Event>) => {\n    setProgress(~~((audioRef.current?.currentTime || 0) / (audioRef.current?.duration || 1) * 100))\n  }, 1000)\n\n  const renderCricle = () => {\n    return (\n      <div className={classCricle}\n           title={`${name} - ${disc}`}>\n        <img className={`${classCricle}`} crossOrigin = \"anonymous\" src={coverUrl}/>\n        <div className={`${classCricle}-range`} style={rangeStyle}></div>\n      </div>\n    )\n  }\n\n  useImperativeHandle(ref, () => ({\n    start,\n    next,\n    play,\n    pause,\n    addEvent,\n    setStyle,\n    cut,\n    setAudioType,\n    setPlayList,\n    setPlayType\n  }));\n\n  const renderRect = () => (\n    <React.Fragment>\n      <div className={`${mainClass}-detail`}>\n        <div className={`${mainClass}-detail-config`}>\n          <div className={classPlayPause} onClick={handlePlayPause}>\n            {\n              playing ? (\n                <PauseIcon></PauseIcon>\n              ) : (\n                <PlayIcon></PlayIcon>\n              )\n            }\n          </div>\n          <div className=\"d-audio-next\">\n            <NextIcon onClick={next}></NextIcon>\n          </div>\n        </div>\n        <div className={`${mainClass}-detail-info`}>\n          <h3 className={`${mainClass}-detail-info-name`} title={name}>{name}</h3>\n          <div className={`${mainClass}-detail-info-disc`} title={disc}>{disc}</div>\n        </div>\n      </div>\n      <div className={`${mainClass}-blur-bg`} style={blurStyle}></div>\n      <div className={classLoading}></div>\n      <div className={`${mainClass}-progress`} style={progressStyle}></div>\n    </React.Fragment>\n  )\n\n  return (\n    <div className={classWrapper} onClick={checkAudioType}>\n      { renderCricle() }\n      { renderRect() }\n      <audio className={`${mainClass}-ele`}\n             src={url}\n             ref={audioRef}\n             muted={muted}\n             loop={isLoop}\n             onPlay={onAudioPlay}\n             onEnded={ended}></audio>\n    </div>\n  )\n}\n\n// export default Daudio\nconst AudioComponent = React.forwardRef(Daudio)\n\nfunction AudioInstance(props: Exclude<IDaudioProps, 'playInfo'>): IDAudio {\n  const AudioRef = React.createRef<IDAudioRef>()\n\n  const div = document.createElement('div')\n  document.body.appendChild(div)\n\n  ReactDOM.render(<AudioComponent {...props} ref={AudioRef}></AudioComponent>, div)\n\n  const destroy = () => {\n    const unmountResult = ReactDOM.unmountComponentAtNode(div)\n    unmountResult && div.parentNode?.removeChild(div)\n  }\n\n  return {\n    ...AudioRef.current as IDAudioRef,\n    destroy\n  }\n}\n\nexport default AudioInstance\n"]},"metadata":{},"sourceType":"module"}