{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport fetch from 'isomorphic-unfetch'; // 200 成功\n// 100001 失败\n// 100002 超时\n\nvar TIME_OUT = 5000;\n\nvar timeOut = function timeOut() {\n  return new _Promise(function (resolve) {\n    setTimeout(function () {\n      resolve({\n        code: 100002,\n        msg: '请求超时',\n        result: null\n      });\n    }, TIME_OUT);\n  });\n};\n\nvar fetchData = function fetchData(url, config) {\n  return new _Promise( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve, reject) {\n      var res, json;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(url, config);\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              json = _context.sent;\n              resolve(json);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              reject(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};\n\nvar http = function http(url) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return _Promise.race([timeOut(), fetchData(url, config)]).then(function (res) {\n    if (res && res.code && res.code === 200) {\n      return _Promise.resolve(res);\n    }\n\n    return _Promise.reject(res);\n  })[\"catch\"](function (err) {\n    return _Promise.reject(err);\n  });\n};\n\nvar httpGet = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url) {\n    var config,\n        _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            config = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n            _context2.next = 3;\n            return http(url, _Object$assign({}, config, {\n              method: 'get'\n            }));\n\n          case 3:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function httpGet(_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar httpPost = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(url) {\n    var config,\n        _args3 = arguments;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            config = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n            _context3.next = 3;\n            return http(url, _Object$assign({}, config, {\n              method: 'post'\n            }));\n\n          case 3:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function httpPost(_x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar httpPut = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(url) {\n    var config,\n        _args4 = arguments;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            config = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};\n            _context4.next = 3;\n            return http(url, _Object$assign({}, config, {\n              method: 'put'\n            }));\n\n          case 3:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function httpPut(_x5) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar httpDelete = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(url) {\n    var config,\n        _args5 = arguments;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            config = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {};\n            _context5.next = 3;\n            return http(url, _Object$assign({}, config, {\n              method: 'delete'\n            }));\n\n          case 3:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function httpDelete(_x6) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nexport default {\n  get: httpGet,\n  post: httpPost,\n  put: httpPut,\n  \"delete\": httpDelete\n};","map":{"version":3,"sources":["/Users/daiwei/pr/react-website-next/utils/http.ts"],"names":["fetch","TIME_OUT","timeOut","resolve","setTimeout","code","msg","result","fetchData","url","config","reject","res","json","http","race","then","err","httpGet","method","httpPost","httpPut","httpDelete","get","post","put"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\n// 200 成功\n// 100001 失败\n// 100002 超时\n\ntype RES_CODE = 200 | 100001 | 100002\n\ninterface IResInfo<T> {\n  code: RES_CODE,\n  msg: string,\n  result: T\n}\n\nconst TIME_OUT = 5000\n\nconst timeOut = (): Promise<IResInfo<null>> => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        code: 100002,\n        msg: '请求超时',\n        result: null\n      })\n    }, TIME_OUT)\n  })\n}\n\nconst fetchData = (url: RequestInfo, config: RequestInit | undefined): Promise<IResInfo<null | never>>  => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const res = await fetch(url, config)\n      const json: IResInfo<any> = await res.json()\n      resolve(json)\n    } catch (err) {\n      reject(err)\n    }\n  })\n}\n\nconst http = (url: RequestInfo, config: RequestInit | undefined = {}) => {\n  return Promise.race([timeOut(), fetchData(url, config)]).then((res) => {\n    if (res && res.code && res.code === 200) {\n      return Promise.resolve(res)\n    }\n\n    return Promise.reject(res)\n  }).catch(err => {\n    return Promise.reject(err)\n  })\n}\n\ntype HttpFn = (url: RequestInfo, config?: RequestInit | undefined) => Promise<IResInfo<any>>\n\nconst httpGet: HttpFn = async (url, config = {}) => {\n  return await http(url, Object.assign({}, config, {\n    method: 'get'\n  }))\n}\n\nconst httpPost: HttpFn = async (url, config = {}) => {\n  return await http(url, Object.assign({}, config, {\n    method: 'post'\n  }))\n}\n\nconst httpPut: HttpFn = async (url, config = {}) => {\n  return await http(url, Object.assign({}, config, {\n    method: 'put'\n  }))\n}\n\nconst httpDelete: HttpFn = async (url, config = {}) => {\n  return await http(url, Object.assign({}, config, {\n    method: 'delete'\n  }))\n}\n\nexport default {\n  get: httpGet,\n  post: httpPost,\n  put: httpPut,\n  delete: httpDelete\n}\n"]},"metadata":{},"sourceType":"module"}