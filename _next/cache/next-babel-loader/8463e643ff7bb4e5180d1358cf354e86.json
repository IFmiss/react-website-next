{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/daiwei/pr/react-website-next/components/Music/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport cls from 'classnames';\nimport http from '@utils/req';\nimport { MUSIC_DETAIL } from '@constance/api';\n\nvar Music = function Music() {\n  var _useState = useState([]),\n      tracksLists = _useState[0],\n      setTracksLists = _useState[1];\n\n  var classString = cls('music-sider-wrapper');\n  useEffect(function () {\n    getMusic(2179377798);\n  }, []);\n\n  var getMusic = function getMusic(id) {\n    var _ref, tracks;\n\n    return _regeneratorRuntime.async(function getMusic$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(http.get(\"\".concat(MUSIC_DETAIL, \"?id=\").concat(id)));\n\n          case 2:\n            _ref = _context.sent;\n            tracks = _ref.playlist.tracks;\n            setTracksLists(tracks);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(\"div\", {\n    className: classString,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    className: \"\".concat(classString, \"-title\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"\\u97F3\\u4E50\"), __jsx(\"div\", {\n    className: \"\".concat(classString, \"-content\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, tracksLists && tracksLists.map(function (item) {\n    return __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, item.name);\n  })));\n};\n\nexport default Music;","map":{"version":3,"sources":["/Users/daiwei/pr/react-website-next/components/Music/index.tsx"],"names":["React","useEffect","useState","cls","http","MUSIC_DETAIL","Music","tracksLists","setTracksLists","classString","getMusic","id","get","tracks","playlist","map","item","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,kBACoBJ,QAAQ,CAAM,EAAN,CAD5B;AAAA,MACXK,WADW;AAAA,MACEC,cADF;;AAElB,MAAMC,WAAW,GAAGN,GAAG,CAAC,qBAAD,CAAvB;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,QAAQ,CAAC,UAAD,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,QAAQ,GAAG,SAAXA,QAAW,CAAOC,EAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACwBP,IAAI,CAACQ,GAAL,WAAYP,YAAZ,iBAA+BM,EAA/B,EADxB;;AAAA;AAAA;AACKE,YAAAA,MADL,QACPC,QADO,CACKD,MADL;AAEfL,YAAAA,cAAc,CAACK,MAAD,CAAd;;AAFe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAKA,SACE;AAAK,IAAA,SAAS,EAAEJ,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,YAAKA,WAAL,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAK,IAAA,SAAS,YAAKA,WAAL,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGIF,WAAW,IAAIA,WAAW,CAACQ,GAAZ,CAAgB,UAACC,IAAD;AAAA,WAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACC,IAAV,CAD6B;AAAA,GAAhB,CAHnB,CAFF,CADF;AAaD,CA1BD;;AA4BA,eAAeX,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport cls from 'classnames'\nimport http from '@utils/req'\nimport { MUSIC_DETAIL } from '@constance/api'\n\nconst Music = () => {\n  const [tracksLists, setTracksLists] = useState<any>([])\n  const classString = cls('music-sider-wrapper')\n\n  useEffect(() => {\n    getMusic(2179377798)\n  }, [])\n\n  const getMusic = async (id: number) => {\n    const { playlist: { tracks } } = await http.get(`${MUSIC_DETAIL}?id=${id}`)\n    setTracksLists(tracks)\n  }\n\n  return (\n    <div className={classString}>\n      <p className={`${classString}-title`}>音乐</p>\n      <div className={`${classString}-content`}>\n        {/* <li>111</li> */}\n        {\n          tracksLists && tracksLists.map((item: { name: React.ReactNode }) => (\n            <li>{item.name}</li>\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Music\n"]},"metadata":{},"sourceType":"module"}