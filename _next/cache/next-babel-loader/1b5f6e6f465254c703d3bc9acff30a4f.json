{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/daiwei/pr/react-website-next/components/Music/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport cls from 'classnames';\nimport http from '@utils/req';\nimport { MUSIC_DETAIL, MUSIC_PLAY_DETAIL } from '@constance/api';\nimport './music.less';\nimport loadable from '@loadable/component';\nimport audioFn from '@components/Audio/main';\nvar audioInstance = audioFn({\n  style: 'rect'\n});\nvar Ripple = loadable(function () {\n  return import('ripple-button');\n});\n\nvar Music = function Music() {\n  var _useState = useState([]),\n      tracksLists = _useState[0],\n      setTracksLists = _useState[1]; // const [playIndex, setPlayIndex] = useState<number>(0)\n\n\n  var playIndex = useRef(0);\n  var classString = cls('music-sider-wrapper');\n  useEffect(function () {\n    getMusic(2179377798);\n    audioInstance.addEvent('onEnded', checkNext);\n    audioInstance.addEvent('onNext', function () {\n      return checkNext();\n    });\n  }, []);\n\n  var getMusic = function getMusic(id) {\n    var res, tracks;\n    return _regeneratorRuntime.async(function getMusic$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(http.get(\"\".concat(MUSIC_DETAIL, \"?id=\").concat(id)));\n\n          case 2:\n            res = _context.sent;\n            tracks = res.data.playlist.tracks;\n            setTracksLists(tracks);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var checkNext = function checkNext() {\n    console.log('playIndex', playIndex); // setPlayIndex(playIndex + 1)\n\n    playIndex.current = playIndex.current + 1;\n    playAudioByIndex(playIndex.current);\n  };\n\n  var playAudioByIndex = function playAudioByIndex(index) {\n    var item, _ref, musicDetail, formatDetail, st;\n\n    return _regeneratorRuntime.async(function playAudioByIndex$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            item = tracksLists[index];\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(getMusicDetailById(item.id));\n\n          case 3:\n            _ref = _context2.sent;\n            musicDetail = _ref.data.songs;\n            formatDetail = formatMusicLists(musicDetail);\n            console.log('formatDetail', formatDetail);\n            st = {\n              url: getUrlById(item.id),\n              coverUrl: clipImage(formatDetail[0].album.picUrl),\n              name: item.name,\n              disc: formatMusicArtists(formatDetail[0].artists)\n            };\n            audioInstance && audioInstance.cut(st);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var checkMusic = function checkMusic(index) {\n    return _regeneratorRuntime.async(function checkMusic$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            // item: MusicGroupList\n            playIndex.current = index;\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var clipImage = function clipImage(src) {\n    var w = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 120;\n    var h = arguments.length > 2 ? arguments[2] : undefined;\n    return \"\".concat(src, \"?param=\").concat(w, \"y\").concat(h ? h : w);\n  };\n\n  var formatMusicLists = function formatMusicLists(lists) {\n    console.log('lists', lists);\n    return lists.map(function (item) {\n      item.album = item.al;\n      item.artists = item.ar;\n      item.duration = item.dt;\n      return item;\n    });\n  };\n\n  var getMusicDetailById = function getMusicDetailById(id) {\n    var data;\n    return _regeneratorRuntime.async(function getMusicDetailById$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(http.get(\"\".concat(MUSIC_PLAY_DETAIL, \"?ids=\").concat(id)));\n\n          case 2:\n            data = _context4.sent;\n            return _context4.abrupt(\"return\", data);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var formatMusicArtists = function formatMusicArtists(artists) {\n    return artists.map(function (artist) {\n      return artist.name;\n    }).join(', ');\n  };\n\n  var getUrlById = function getUrlById(id) {\n    return \"//music.163.com/song/media/outer/url?id=\".concat(id, \".mp3\");\n  };\n\n  return __jsx(\"div\", {\n    className: classString,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    className: \"\".concat(classString, \"-title\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"\\u97F3\\u4E50\"), __jsx(\"div\", {\n    className: \"\".concat(classString, \"-content\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, tracksLists && tracksLists.map(function (item, index) {\n    return __jsx(Ripple, {\n      key: index,\n      color: \"rgba(99, 99, 99, 0.3)\",\n      onClick: checkMusic.bind(null, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, item.name));\n  })));\n};\n\nexport default Music;","map":{"version":3,"sources":["/Users/daiwei/pr/react-website-next/components/Music/index.tsx"],"names":["React","useEffect","useState","useRef","cls","http","MUSIC_DETAIL","MUSIC_PLAY_DETAIL","loadable","audioFn","audioInstance","style","Ripple","Music","tracksLists","setTracksLists","playIndex","classString","getMusic","addEvent","checkNext","id","get","res","tracks","data","playlist","console","log","current","playAudioByIndex","index","item","getMusicDetailById","musicDetail","songs","formatDetail","formatMusicLists","st","url","getUrlById","coverUrl","clipImage","album","picUrl","name","disc","formatMusicArtists","artists","cut","checkMusic","src","w","h","lists","map","al","ar","duration","dt","artist","join","bind"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAgE,OAAhE;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,YAAT,EAAuBC,iBAAvB,QAAgD,gBAAhD;AACA,OAAO,cAAP;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAKA,OAAOC,OAAP,MAAoB,wBAApB;AACA,IAAMC,aAAa,GAAGD,OAAO,CAAC;AAC5BE,EAAAA,KAAK,EAAE;AADqB,CAAD,CAA7B;AAIA,IAAMC,MAAM,GAAGJ,QAAQ,CAAC;AAAA,SAAM,OAAO,eAAP,CAAN;AAAA,CAAD,CAAvB;;AAEA,IAAMK,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,kBACoBX,QAAQ,CAAM,EAAN,CAD5B;AAAA,MACXY,WADW;AAAA,MACEC,cADF,iBAElB;;;AACA,MAAMC,SAAS,GAAGb,MAAM,CAAS,CAAT,CAAxB;AACA,MAAMc,WAAW,GAAGb,GAAG,CAAC,qBAAD,CAAvB;AAEAH,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,QAAQ,CAAC,UAAD,CAAR;AACAR,IAAAA,aAAa,CAACS,QAAd,CAAuB,SAAvB,EAAkCC,SAAlC;AACAV,IAAAA,aAAa,CAACS,QAAd,CAAuB,QAAvB,EAAiC;AAAA,aAAMC,SAAS,EAAf;AAAA,KAAjC;AACD,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAMF,QAAQ,GAAG,SAAXA,QAAW,CAAOG,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACGhB,IAAI,CAACiB,GAAL,WAAYhB,YAAZ,iBAA+Be,EAA/B,EADH;;AAAA;AACTE,YAAAA,GADS;AAEKC,YAAAA,MAFL,GAEkBD,GAAG,CAACE,IAFtB,CAEPC,QAFO,CAEKF,MAFL;AAGfT,YAAAA,cAAc,CAACS,MAAD,CAAd;;AAHe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAMA,MAAMJ,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBO,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBZ,SAAzB,EADsB,CAEtB;;AACAA,IAAAA,SAAS,CAACa,OAAV,GAAoBb,SAAS,CAACa,OAAV,GAAoB,CAAxC;AACAC,IAAAA,gBAAgB,CAACd,SAAS,CAACa,OAAX,CAAhB;AACD,GALD;;AAOA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAOC,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjBC,YAAAA,IADiB,GACVlB,WAAW,CAACiB,KAAD,CADD;AAAA;AAAA,6CAEyBE,kBAAkB,CAACD,IAAI,CAACX,EAAN,CAF3C;;AAAA;AAAA;AAECa,YAAAA,WAFD,QAEfT,IAFe,CAEPU,KAFO;AAGjBC,YAAAA,YAHiB,GAGGC,gBAAgB,CAACH,WAAD,CAHnB;AAIvBP,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BQ,YAA5B;AACME,YAAAA,EALiB,GAKZ;AACTC,cAAAA,GAAG,EAAEC,UAAU,CAACR,IAAI,CAACX,EAAN,CADN;AAEToB,cAAAA,QAAQ,EAAEC,SAAS,CAACN,YAAY,CAAC,CAAD,CAAZ,CAAgBO,KAAhB,CAAsBC,MAAvB,CAFV;AAGTC,cAAAA,IAAI,EAAEb,IAAI,CAACa,IAHF;AAITC,cAAAA,IAAI,EAAEC,kBAAkB,CAACX,YAAY,CAAC,CAAD,CAAZ,CAAgBY,OAAjB;AAJf,aALY;AAWvBtC,YAAAA,aAAa,IAAIA,aAAa,CAACuC,GAAd,CAAkBX,EAAlB,CAAjB;;AAXuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAcA,MAAMY,UAAU,GAAG,SAAbA,UAAa,CAAOnB,KAAP;AAAA;AAAA;AAAA;AAAA;AACjB;AACAf,YAAAA,SAAS,CAACa,OAAV,GAAoBE,KAApB;;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAKA,MAAMW,SAAS,GAAG,SAAZA,SAAY,CAACS,GAAD,EAAsD;AAAA,QAAxCC,CAAwC,uEAA5B,GAA4B;AAAA,QAAvBC,CAAuB;AACtE,qBAAUF,GAAV,oBAAuBC,CAAvB,cAA4BC,CAAC,GAAGA,CAAH,GAAOD,CAApC;AACD,GAFD;;AAIA,MAAMf,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACiB,KAAD,EAAkB;AACzC3B,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB0B,KAArB;AACA,WAAOA,KAAK,CAACC,GAAN,CAAU,UAACvB,IAAD,EAAe;AAC9BA,MAAAA,IAAI,CAACW,KAAL,GAAaX,IAAI,CAACwB,EAAlB;AACAxB,MAAAA,IAAI,CAACgB,OAAL,GAAehB,IAAI,CAACyB,EAApB;AACAzB,MAAAA,IAAI,CAAC0B,QAAL,GAAgB1B,IAAI,CAAC2B,EAArB;AACA,aAAO3B,IAAP;AACD,KALM,CAAP;AAMD,GARD;;AAUA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAOZ,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACNhB,IAAI,CAACiB,GAAL,WAAYf,iBAAZ,kBAAqCc,EAArC,EADM;;AAAA;AACnBI,YAAAA,IADmB;AAAA,8CAElBA,IAFkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAKA,MAAMsB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD,EAAsB;AAC/C,WAAOA,OAAO,CAACO,GAAR,CAAY,UAACK,MAAD;AAAA,aAAYA,MAAM,CAACf,IAAnB;AAAA,KAAZ,EAAqCgB,IAArC,CAA0C,IAA1C,CAAP;AACD,GAFD;;AAIA,MAAMrB,UAAU,GAAG,SAAbA,UAAa,CAACnB,EAAD,EAAgB;AACjC,6DAAkDA,EAAlD;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAEJ,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,YAAKA,WAAL,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAK,IAAA,SAAS,YAAKA,WAAL,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIH,WAAW,IAAIA,WAAW,CAACyC,GAAZ,CAAgB,UAACvB,IAAD,EAAuBD,KAAvB;AAAA,WAC7B,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,KAAb;AACQ,MAAA,KAAK,EAAC,uBADd;AAEQ,MAAA,OAAO,EAAEmB,UAAU,CAACY,IAAX,CAAgB,IAAhB,EAAsB/B,KAAtB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,IAAI,CAACa,IAAV,CAHF,CAD6B;AAAA,GAAhB,CAFnB,CAFF,CADF;AAgBD,CAvFD;;AAyFA,eAAehC,KAAf","sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from 'react'\nimport cls from 'classnames'\nimport http from '@utils/req'\nimport { MUSIC_DETAIL, MUSIC_PLAY_DETAIL } from '@constance/api'\nimport './music.less'\nimport loadable from '@loadable/component'\nimport {\n  artists, MusicGroupList\n} from './types'\nimport { IDAudio } from '../Audio'\nimport audioFn from '@components/Audio/main'\nconst audioInstance = audioFn({\n  style: 'rect'\n})\n\nconst Ripple = loadable(() => import('ripple-button'))\n\nconst Music = () => {\n  const [tracksLists, setTracksLists] = useState<any>([])\n  // const [playIndex, setPlayIndex] = useState<number>(0)\n  const playIndex = useRef<number>(0)\n  const classString = cls('music-sider-wrapper')\n\n  useEffect(() => {\n    getMusic(2179377798)\n    audioInstance.addEvent('onEnded', checkNext)\n    audioInstance.addEvent('onNext', () => checkNext())\n  }, [])\n\n  const getMusic = async (id: number) => {\n    const res = await http.get(`${MUSIC_DETAIL}?id=${id}`)\n    const { playlist: { tracks } } = res.data\n    setTracksLists(tracks)\n  }\n\n  const checkNext = () => {\n    console.log('playIndex', playIndex)\n    // setPlayIndex(playIndex + 1)\n    playIndex.current = playIndex.current + 1\n    playAudioByIndex(playIndex.current)\n  }\n\n  const playAudioByIndex = async (index: number) => {\n    const item = tracksLists[index]\n    const { data: { songs : musicDetail } } = await getMusicDetailById(item.id)\n    const formatDetail: any = formatMusicLists(musicDetail)\n    console.log('formatDetail', formatDetail)\n    const st = {\n      url: getUrlById(item.id),\n      coverUrl: clipImage(formatDetail[0].album.picUrl),\n      name: item.name,\n      disc: formatMusicArtists(formatDetail[0].artists)\n    }\n    audioInstance && audioInstance.cut(st)\n  }\n\n  const checkMusic = async (index: number) => {\n    // item: MusicGroupList\n    playIndex.current = index\n  }\n\n  const clipImage = (src: string, w: number = 120, h?: number): string => {\n    return `${src}?param=${w}y${h ? h : w}`\n  }\n\n  const formatMusicLists = (lists: any[]) => {\n    console.log('lists', lists)\n    return lists.map((item: any) => {\n      item.album = item.al\n      item.artists = item.ar\n      item.duration = item.dt\n      return item\n    })\n  }\n\n  const getMusicDetailById = async (id: number) => {\n    const data = await http.get(`${MUSIC_PLAY_DETAIL}?ids=${id}`) as any\n    return data\n  }\n\n  const formatMusicArtists = (artists: artists) => {\n    return artists.map((artist) => artist.name).join(', ')\n  }\n\n  const getUrlById = (id: number) => {\n    return `//music.163.com/song/media/outer/url?id=${id}.mp3`\n  }  \n\n  return (\n    <div className={classString}>\n      <p className={`${classString}-title`}>音乐</p>\n      <div className={`${classString}-content`}>\n        {\n          tracksLists && tracksLists.map((item: MusicGroupList, index: number) => (\n            <Ripple key={index}\n                    color='rgba(99, 99, 99, 0.3)'\n                    onClick={checkMusic.bind(null, index)}>\n              <li>{item.name}</li>\n            </Ripple>\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Music\n"]},"metadata":{},"sourceType":"module"}