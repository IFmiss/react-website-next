{"ast":null,"code":"var _jsxFileName = \"/Users/daiwei/pr/react-website-next/pages/blog/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport Layout from '@components/Layout';\nimport BlogList from '@module/blog.list';\nimport classNames from 'classnames';\nimport { PROJECT_NAME } from '@constance/index';\nimport { ARTICLE_LISTS } from '@constance/api';\nimport BaseAction from '@root/store/actions/base';\nimport './blog.less';\nimport http from '@utils/req';\nimport { connect } from 'react-redux';\n\nconst Blog = props => {\n  const {\n    blogInfo: {\n      lists\n    }\n  } = props;\n  const classString = classNames({\n    [`${PROJECT_NAME}-blog`]: true\n  });\n  useEffect(() => {\n    console.log(props.ele);\n  }, []);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classString,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, lists && lists.length && lists.map(item => __jsx(BlogList, {\n    list: item,\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))));\n};\n\nBlog.getInitialProps = async ctx => {\n  const res = await http.get(`${ARTICLE_LISTS}`, {\n    params: {\n      page: '0',\n      size: '666',\n      type: '全部'\n    }\n  });\n  return {\n    blogInfo: res.data && res.data.result || {}\n  };\n};\n\nconst mapState = state => _objectSpread({}, state.BaseStore);\n\nconst mapDispatch = BaseAction;\nexport default connect(mapState, mapDispatch)(Blog);","map":{"version":3,"sources":["/Users/daiwei/pr/react-website-next/pages/blog/index.tsx"],"names":["React","useEffect","Layout","BlogList","classNames","PROJECT_NAME","ARTICLE_LISTS","BaseAction","http","connect","Blog","props","blogInfo","lists","classString","console","log","ele","length","map","item","id","getInitialProps","ctx","res","get","params","page","size","type","data","result","mapState","state","BaseStore","mapDispatch"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAIA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,QAAP,MAEO,mBAFP;AAGA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SACEC,YADF,QAEO,kBAFP;AAIA,SACEC,aADF,QAEO,gBAFP;AAQA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAeA,MAAMC,IAA6B,GAAIC,KAAD,IAAW;AAC/C,QAAM;AAAEC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA;AAAF;AAAZ,MAA0BF,KAAhC;AACA,QAAMG,WAAW,GAAGV,UAAU,CAAC;AAC7B,KAAE,GAAEC,YAAa,OAAjB,GAA0B;AADG,GAAD,CAA9B;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,GAAlB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEH,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEID,KAAK,IAAIA,KAAK,CAACK,MAAf,IAAyBL,KAAK,CAACM,GAAN,CAAUC,IAAI,IACrC,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADuB,CAF7B,CADF,CADF;AAWD,CArBD;;AAuBAX,IAAI,CAACY,eAAL,GAAuB,MAAOC,GAAP,IAAe;AACpC,QAAMC,GAAG,GAAG,MAAMhB,IAAI,CAACiB,GAAL,CAAU,GAAEnB,aAAc,EAA1B,EAA6B;AAC7CoB,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,IAAI,EAAE,KAAnB;AAA0BC,MAAAA,IAAI,EAAE;AAAhC;AADqC,GAA7B,CAAlB;AAGA,SAAO;AACLjB,IAAAA,QAAQ,EAAEY,GAAG,CAACM,IAAJ,IAAYN,GAAG,CAACM,IAAJ,CAASC,MAArB,IAA+B;AADpC,GAAP;AAGD,CAPD;;AASA,MAAMC,QAAQ,GAAIC,KAAD,sBAAyBA,KAAK,CAACC,SAA/B,CAAjB;;AAEA,MAAMC,WAAW,GAAG5B,UAApB;AAEA,eAAeE,OAAO,CAACuB,QAAD,EAAWG,WAAX,CAAP,CAA+BzB,IAA/B,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport {\n  NextPage\n} from 'next'\nimport Layout from '@components/Layout'\nimport BlogList, {\n  IBlogList\n} from '@module/blog.list'\nimport classNames from 'classnames'\nimport {\n  PROJECT_NAME\n} from '@constance/index'\n\nimport {\n  ARTICLE_LISTS\n} from '@constance/api'\n\nimport { \n  IStore\n} from '@store/types';\n\nimport BaseAction from '@root/store/actions/base'\n\nimport './blog.less'\nimport http from '@utils/req'\nimport { connect } from 'react-redux'\n\ninterface BlogListReqData {\n  lists: Array<IBlogList>\n  total: number\n  offset: number\n  size: number\n  type: string\n}\n\ninterface BlogProps {\n  blogInfo: BlogListReqData\n  ele: any\n}\n\nconst Blog: NextPage<BlogProps, {}> = (props) => {\n  const { blogInfo: { lists } } = props\n  const classString = classNames({\n    [`${PROJECT_NAME}-blog`]: true\n  })\n\n  useEffect(() => {\n    console.log(props.ele)\n  }, [])\n\n  return (\n    <Layout>\n      <div className={classString}>\n        {\n          lists && lists.length && lists.map(item => (\n            <BlogList list={item} key={item.id}/>\n          ))\n        }\n      </div>\n    </Layout>\n  )\n}\n\nBlog.getInitialProps = async (ctx) => {\n  const res = await http.get(`${ARTICLE_LISTS}`, {\n    params: { page: '0', size: '666', type: '全部' }\n  })\n  return {\n    blogInfo: res.data && res.data.result || {}\n  }\n}\n\nconst mapState = (state: IStore) => ({ ...state.BaseStore })\n\nconst mapDispatch = BaseAction\n\nexport default connect(mapState, mapDispatch)(Blog)\n"]},"metadata":{},"sourceType":"module"}