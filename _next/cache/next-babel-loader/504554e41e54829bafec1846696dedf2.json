{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/daiwei/pr/react-website-next/pages/blog/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport Layout from '@components/Layout';\nimport BlogList from '@module/blog.list';\nimport classNames from 'classnames';\nimport { PROJECT_NAME } from '@constance/index';\nimport { ARTICLE_LISTS } from '@constance/api';\nimport './blog.less';\nimport http from '@utils/req';\nimport { connect } from 'react-redux';\n\nvar Blog = function Blog(props) {\n  var lists = props.blogInfo.lists;\n  var classString = classNames(_defineProperty({}, \"\".concat(PROJECT_NAME, \"-blog\"), true));\n  useEffect(function () {\n    console.log(props.ele);\n  }, []);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classString,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, lists && lists.length && lists.map(function (item) {\n    return __jsx(BlogList, {\n      list: item,\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n  })));\n};\n\nBlog.getInitialProps = function _callee(ctx) {\n  var res;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(http.get(\"\".concat(ARTICLE_LISTS), {\n            params: {\n              page: '0',\n              size: '666',\n              type: '全部'\n            }\n          }));\n\n        case 2:\n          res = _context.sent;\n          return _context.abrupt(\"return\", {\n            blogInfo: res.data && res.data.result || {}\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar mapState = function mapState(state) {\n  return _objectSpread({}, state.BaseStore);\n};\n\nvar mapDispatch = function mapDispatch(state) {\n  return _objectSpread({}, state.BaseStore);\n};\n\nexport default connect(mapState)(Blog);","map":{"version":3,"sources":["/Users/daiwei/pr/react-website-next/pages/blog/index.tsx"],"names":["React","useEffect","Layout","BlogList","classNames","PROJECT_NAME","ARTICLE_LISTS","http","connect","Blog","props","lists","blogInfo","classString","console","log","ele","length","map","item","id","getInitialProps","ctx","get","params","page","size","type","res","data","result","mapState","state","BaseStore","mapDispatch"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAIA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,QAAP,MAEO,mBAFP;AAGA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SACEC,YADF,QAEO,kBAFP;AAIA,SACEC,aADF,QAEO,gBAFP;AAUA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAeA,IAAMC,IAA6B,GAAG,SAAhCA,IAAgC,CAACC,KAAD,EAAW;AAAA,MAC3BC,KAD2B,GACfD,KADe,CACvCE,QADuC,CAC3BD,KAD2B;AAE/C,MAAME,WAAW,GAAGT,UAAU,+BACxBC,YADwB,YACF,IADE,EAA9B;AAIAJ,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,GAAlB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEH,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIF,KAAK,IAAIA,KAAK,CAACM,MAAf,IAAyBN,KAAK,CAACO,GAAN,CAAU,UAAAC,IAAI;AAAA,WACrC,MAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAsB,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADqC;AAAA,GAAd,CAF7B,CADF,CADF;AAWD,CArBD;;AAuBAX,IAAI,CAACY,eAAL,GAAuB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHf,IAAI,CAACgB,GAAL,WAAYjB,aAAZ,GAA6B;AAC7CkB,YAAAA,MAAM,EAAE;AAAEC,cAAAA,IAAI,EAAE,GAAR;AAAaC,cAAAA,IAAI,EAAE,KAAnB;AAA0BC,cAAAA,IAAI,EAAE;AAAhC;AADqC,WAA7B,CADG;;AAAA;AACfC,UAAAA,GADe;AAAA,2CAId;AACLhB,YAAAA,QAAQ,EAAEgB,GAAG,CAACC,IAAJ,IAAYD,GAAG,CAACC,IAAJ,CAASC,MAArB,IAA+B;AADpC,WAJc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AASA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,2BAAyBA,KAAK,CAACC,SAA/B;AAAA,CAAjB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACF,KAAD;AAAA,2BAAyBA,KAAK,CAACC,SAA/B;AAAA,CAApB;;AAEA,eAAezB,OAAO,CAACuB,QAAD,CAAP,CAAkBtB,IAAlB,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport {\n  NextPage\n} from 'next'\nimport Layout from '@components/Layout'\nimport BlogList, {\n  IBlogList\n} from '@module/blog.list'\nimport classNames from 'classnames'\nimport {\n  PROJECT_NAME\n} from '@constance/index'\n\nimport {\n  ARTICLE_LISTS\n} from '@constance/api'\n\nimport { \n  IStore\n} from '@store/types';\n\nimport Action from '@store/actions/baseAction'\n\nimport './blog.less'\nimport http from '@utils/req'\nimport { connect } from 'react-redux'\n\ninterface BlogListReqData {\n  lists: Array<IBlogList>\n  total: number\n  offset: number\n  size: number\n  type: string\n}\n\ninterface BlogProps {\n  blogInfo: BlogListReqData\n  ele: any\n}\n\nconst Blog: NextPage<BlogProps, {}> = (props) => {\n  const { blogInfo: { lists } } = props\n  const classString = classNames({\n    [`${PROJECT_NAME}-blog`]: true\n  })\n\n  useEffect(() => {\n    console.log(props.ele)\n  }, [])\n\n  return (\n    <Layout>\n      <div className={classString}>\n        {\n          lists && lists.length && lists.map(item => (\n            <BlogList list={item} key={item.id}/>\n          ))\n        }\n      </div>\n    </Layout>\n  )\n}\n\nBlog.getInitialProps = async (ctx) => {\n  const res = await http.get(`${ARTICLE_LISTS}`, {\n    params: { page: '0', size: '666', type: '全部' }\n  })\n  return {\n    blogInfo: res.data && res.data.result || {}\n  }\n}\n\nconst mapState = (state: IStore) => ({ ...state.BaseStore })\n\nconst mapDispatch = (state: IStore) => ({ ...state.BaseStore })\n\nexport default connect(mapState)(Blog)\n"]},"metadata":{},"sourceType":"module"}