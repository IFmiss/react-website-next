{"ast":null,"code":"import audio from './index';\n\nconst audioInstance = args => {\n  const {\n    style,\n    handle,\n    type,\n    playList,\n    playType\n  } = args; // 设置样式\n\n  style && audio.setStyle(style); // 设置audio 类型  列表还是handle\n\n  type && audio.setAudioType(type); // 设置播放列表\n\n  playList && type === 'list' && playList.length && audio.setPlayList(playList);\n  playType && audio.setPlayType(playType); // 注册事件\n\n  const handleKeys = handle && Object.keys(handle);\n  handleKeys && handleKeys.forEach(item => {\n    audio.addEvent(item, args.handle && args.handle[item] || function () {});\n  }); // 初始化\n\n  audio.start();\n  return audio;\n};\n\nexport default audioInstance;","map":{"version":3,"sources":["/Users/daiwei/pr/react-website-next/components/Audio/main.ts"],"names":["audio","audioInstance","args","style","handle","type","playList","playType","setStyle","setAudioType","length","setPlayList","setPlayType","handleKeys","Object","keys","forEach","item","addEvent","start"],"mappings":"AAAA,OAAOA,KAAP,MAIO,SAJP;;AAMA,MAAMC,aAAa,GAAIC,IAAD,IAAwB;AAC5C,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,IAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA;AALI,MAMFL,IANJ,CAD4C,CAS5C;;AACAC,EAAAA,KAAK,IACAH,KAAK,CAACQ,QAAN,CAAeL,KAAf,CADL,CAV4C,CAa5C;;AACAE,EAAAA,IAAI,IACCL,KAAK,CAACS,YAAN,CAAmBJ,IAAnB,CADL,CAd4C,CAiB5C;;AACAC,EAAAA,QAAQ,IACHD,IAAI,KAAK,MADd,IAEKC,QAAQ,CAACI,MAFd,IAGKV,KAAK,CAACW,WAAN,CAAkBL,QAAlB,CAHL;AAKAC,EAAAA,QAAQ,IACHP,KAAK,CAACY,WAAN,CAAkBL,QAAlB,CADL,CAvB4C,CA0B5C;;AACA,QAAMM,UAAU,GAAGT,MAAM,IAAIU,MAAM,CAACC,IAAP,CAAYX,MAAZ,CAA7B;AACAS,EAAAA,UAAU,IAAKA,UAAD,CAAiCG,OAAjC,CAA0CC,IAAD,IAAU;AAC/DjB,IAAAA,KAAK,CAACkB,QAAN,CAAeD,IAAf,EAAqBf,IAAI,CAACE,MAAL,IAAeF,IAAI,CAACE,MAAL,CAAYa,IAAZ,CAAf,IAAoC,YAAU,CAAE,CAArE;AACD,GAFa,CAAd,CA5B4C,CAgC5C;;AACAjB,EAAAA,KAAK,CAACmB,KAAN;AACA,SAAOnB,KAAP;AACD,CAnCD;;AAqCA,eAAeC,aAAf","sourcesContent":["import audio, {\n  IDaudioProps,\n  IDAudioRef,\n  EventType\n} from './index'\n\nconst audioInstance = (args: IDaudioProps) => {\n  const {\n    style,\n    handle,\n    type,\n    playList,\n    playType\n  } = args\n\n  // 设置样式\n  style\n    && audio.setStyle(style)\n\n  // 设置audio 类型  列表还是handle\n  type\n    && audio.setAudioType(type)\n\n  // 设置播放列表\n  playList\n    && type === 'list'\n    && playList.length\n    && audio.setPlayList(playList)\n\n  playType\n    && audio.setPlayType(playType)\n\n  // 注册事件\n  const handleKeys = handle && Object.keys(handle)\n  handleKeys && (handleKeys as Array<EventType>).forEach((item) => {\n    audio.addEvent(item, args.handle && args.handle[item] || function(){})\n  })\n\n  // 初始化\n  audio.start()\n  return audio\n}\n\nexport default audioInstance\n"]},"metadata":{},"sourceType":"module"}