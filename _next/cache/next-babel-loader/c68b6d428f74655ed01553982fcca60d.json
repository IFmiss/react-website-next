{"ast":null,"code":"var _jsxFileName = \"/Users/daiwei/pr/react-website-next/components/SiderWarp/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef, useState, useImperativeHandle } from 'react';\nimport classNames from 'classnames';\nimport { PROJECT_NAME } from '@constance/index';\nimport './sider-warp.less';\nimport Menu from './menu.svg';\n\nconst SiderWarp = (props, ref) => {\n  const {\n    0: show,\n    1: setShow\n  } = useState(props.show);\n  const classString = classNames({\n    [`${PROJECT_NAME}-comp-sider-warp`]: true,\n    [`show`]: show,\n    [`${props.type}`]: true\n  });\n  const styleTop = {\n    top: props.switchTop ? props.switchTop : '50px'\n  };\n\n  const hideComp = () => {\n    setShow(show => show = false);\n    props.hideFn && props.hideFn();\n  };\n\n  const showComp = () => {\n    setShow(show => show = true);\n    props.showFn && props.showFn();\n  };\n\n  const toggleSiderWarp = () => {\n    show ? props.hideFn && props.hideFn() : props.showFn && props.showFn();\n    setShow(show => show = !show);\n  };\n\n  const mapRef = useRef(null);\n  useImperativeHandle(ref, () => {\n    return {\n      showComp,\n      hideComp\n    };\n  });\n  return __jsx(\"section\", {\n    className: classString,\n    ref: mapRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"mask\",\n    onClick: hideComp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"content-switch\",\n    onClick: toggleSiderWarp,\n    style: styleTop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), props.children));\n};\n\nconst SiderWarpComponent = React.forwardRef(SiderWarp);\nexport default SiderWarpComponent;","map":{"version":3,"sources":["/Users/daiwei/pr/react-website-next/components/SiderWarp/index.tsx"],"names":["React","useRef","useState","useImperativeHandle","classNames","PROJECT_NAME","Menu","SiderWarp","props","ref","show","setShow","classString","type","styleTop","top","switchTop","hideComp","hideFn","showComp","showFn","toggleSiderWarp","mapRef","children","SiderWarpComponent","forwardRef"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAA6CC,mBAA7C,QAAwE,OAAxE;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAO,mBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAeA,MAAMC,SAAyE,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAChG,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBT,QAAQ,CAAUM,KAAK,CAACE,IAAhB,CAAhC;AAEA,QAAME,WAAW,GAAGR,UAAU,CAAC;AAC7B,KAAE,GAAEC,YAAa,kBAAjB,GAAqC,IADR;AAE7B,KAAE,MAAF,GAAUK,IAFmB;AAG7B,KAAE,GAAEF,KAAK,CAACK,IAAK,EAAf,GAAmB;AAHU,GAAD,CAA9B;AAMA,QAAMC,QAAQ,GAAG;AACfC,IAAAA,GAAG,EAAEP,KAAK,CAACQ,SAAN,GAAkBR,KAAK,CAACQ,SAAxB,GAAoC;AAD1B,GAAjB;;AAIA,QAAMC,QAAQ,GAAG,MAAM;AACrBN,IAAAA,OAAO,CAAED,IAAD,IAAUA,IAAI,GAAG,KAAlB,CAAP;AACAF,IAAAA,KAAK,CAACU,MAAN,IAAgBV,KAAK,CAACU,MAAN,EAAhB;AACD,GAHD;;AAKA,QAAMC,QAAQ,GAAG,MAAM;AACrBR,IAAAA,OAAO,CAAED,IAAD,IAAUA,IAAI,GAAG,IAAlB,CAAP;AACAF,IAAAA,KAAK,CAACY,MAAN,IAAgBZ,KAAK,CAACY,MAAN,EAAhB;AACD,GAHD;;AAKA,QAAMC,eAAe,GAAG,MAAM;AAC5BX,IAAAA,IAAI,GAAGF,KAAK,CAACU,MAAN,IAAgBV,KAAK,CAACU,MAAN,EAAnB,GAAoCV,KAAK,CAACY,MAAN,IAAgBZ,KAAK,CAACY,MAAN,EAAxD;AACAT,IAAAA,OAAO,CAAED,IAAD,IAAUA,IAAI,GAAG,CAACA,IAAnB,CAAP;AACD,GAHD;;AAKA,QAAMY,MAAM,GAAGrB,MAAM,CAAC,IAAD,CAArB;AAEAE,EAAAA,mBAAmB,CAACM,GAAD,EAAM,MAAM;AAC7B,WAAO;AACLU,MAAAA,QADK;AAELF,MAAAA;AAFK,KAAP;AAID,GALkB,CAAnB;AAOA,SACE;AAAS,IAAA,SAAS,EAAEL,WAApB;AAAiC,IAAA,GAAG,EAAEU,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,OAAO,EAAEL,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,OAAO,EAAEI,eAAzC;AAA0D,IAAA,KAAK,EAAEP,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIGN,KAAK,CAACe,QAJT,CAFF,CADF;AAWD,CAhDD;;AAkDA,MAAMC,kBAAkB,GAAGxB,KAAK,CAACyB,UAAN,CAAiBlB,SAAjB,CAA3B;AAEA,eAAeiB,kBAAf","sourcesContent":["import React, { useRef, useState, useEffect, useImperativeHandle } from 'react'\nimport classNames from 'classnames'\nimport { PROJECT_NAME } from '@constance/index'\nimport './sider-warp.less'\nimport Menu from './menu.svg'\n\ninterface ISiderWarpProps {\n  show: boolean;\n  switchTop?: string;\n  type?: string;\n  hideFn?: () => void;\n  showFn?: () => void;\n}\n\ninterface ISiderWrapRef {\n  showComp: () => void;\n  hideComp: () => void;\n}\n\nconst SiderWarp: React.ForwardRefRenderFunction<ISiderWrapRef, ISiderWarpProps> = (props, ref) => {\n  const [show, setShow] = useState<boolean>(props.show)\n\n  const classString = classNames({\n    [`${PROJECT_NAME}-comp-sider-warp`]: true,\n    [`show`]: show,\n    [`${props.type}`]: true\n  })\n\n  const styleTop = {\n    top: props.switchTop ? props.switchTop : '50px'\n  }\n\n  const hideComp = () => {\n    setShow((show) => show = false)\n    props.hideFn && props.hideFn()\n  }\n\n  const showComp = () => {\n    setShow((show) => show = true)\n    props.showFn && props.showFn()\n  }\n\n  const toggleSiderWarp = () => {\n    show ? props.hideFn && props.hideFn() : props.showFn && props.showFn()\n    setShow((show) => show = !show)\n  }\n\n  const mapRef = useRef(null)\n\n  useImperativeHandle(ref, () => {\n    return {\n      showComp,\n      hideComp\n    }\n  })\n\n  return (\n    <section className={classString} ref={mapRef}>\n      <div className='mask' onClick={hideComp}></div>\n      <div className='content'>\n        <div className=\"content-switch\" onClick={toggleSiderWarp} style={styleTop}>\n          <Menu></Menu>\n        </div>\n        {props.children}\n      </div>\n    </section>\n  )\n}\n\nconst SiderWarpComponent = React.forwardRef(SiderWarp)\n\nexport default SiderWarpComponent as any"]},"metadata":{},"sourceType":"module"}