{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\n\n/**\n * @description 判断元素是否存在某个class类\n * @param { HTMLElement } el dom元素\n * @param { String } className class名称\n * @example\n * hasClass(document.body, 'd-utils')\n */\nexport function hasClass(el, className) {\n  return el.classList.contains(className);\n}\n/**\n* @description 判断元素是否存在某个class类\n* @param { HTMLElement } el dom元素\n* @param { String } className class名称\n* @example\n* hasClass(document.body, 'd-utils')\n*/\n\nexport function addClass(el, className) {\n  if (_Array$isArray(className)) {\n    className.forEach(function (item) {\n      if (!hasClass(el, item)) {\n        el.classList.add(item);\n      }\n    });\n    return;\n  }\n\n  if (!hasClass(el, className)) {\n    el.classList.add(className);\n  }\n}\n/**\n* @description 元素删除class\n* @param { HTMLElement } el dom元素\n* @param { (String | Array) } className class名称，可以是多个\n* @example\n* removeClass(document.body, 'd-utils')\n*/\n\nexport function removeClass(el, className) {\n  if (_Array$isArray(className)) {\n    className.forEach(function (item) {\n      if (hasClass(el, item)) {\n        el.classList.remove(item);\n      }\n    });\n    return;\n  }\n\n  if (hasClass(el, className)) {\n    el.classList.remove(className);\n  }\n}","map":{"version":3,"sources":["/Users/daiwei/pr/react-website-next/components/Ripple/utils.ts"],"names":["hasClass","el","className","classList","contains","addClass","forEach","item","add","removeClass","remove"],"mappings":";;AAAA;;;;;;;AAOA,OAAO,SAASA,QAAT,CAAkBC,EAAlB,EAAmCC,SAAnC,EAAsD;AAC3D,SAAOD,EAAE,CAACE,SAAH,CAAaC,QAAb,CAAsBF,SAAtB,CAAP;AACD;AACD;;;;;;;;AAOA,OAAO,SAASG,QAAT,CAAkBJ,EAAlB,EAAmCC,SAAnC,EAAsD;AAC3D,MAAI,eAAcA,SAAd,CAAJ,EAA8B;AAC1BA,IAAAA,SAAS,CAACI,OAAV,CAAkB,UAACC,IAAD,EAAU;AACxB,UAAI,CAACP,QAAQ,CAACC,EAAD,EAAKM,IAAL,CAAb,EAAyB;AACrBN,QAAAA,EAAE,CAACE,SAAH,CAAaK,GAAb,CAAiBD,IAAjB;AACH;AACJ,KAJD;AAKA;AACH;;AACD,MAAI,CAACP,QAAQ,CAACC,EAAD,EAAKC,SAAL,CAAb,EAA8B;AAC1BD,IAAAA,EAAE,CAACE,SAAH,CAAaK,GAAb,CAAiBN,SAAjB;AACH;AACF;AACD;;;;;;;;AAOA,OAAO,SAASO,WAAT,CAAqBR,EAArB,EAAsCC,SAAtC,EAAyD;AAC9D,MAAI,eAAcA,SAAd,CAAJ,EAA8B;AAC1BA,IAAAA,SAAS,CAACI,OAAV,CAAkB,UAACC,IAAD,EAAU;AACxB,UAAIP,QAAQ,CAACC,EAAD,EAAKM,IAAL,CAAZ,EAAwB;AACpBN,QAAAA,EAAE,CAACE,SAAH,CAAaO,MAAb,CAAoBH,IAApB;AACH;AACJ,KAJD;AAKA;AACH;;AACD,MAAIP,QAAQ,CAACC,EAAD,EAAKC,SAAL,CAAZ,EAA6B;AACzBD,IAAAA,EAAE,CAACE,SAAH,CAAaO,MAAb,CAAoBR,SAApB;AACH;AACF","sourcesContent":["/**\n * @description 判断元素是否存在某个class类\n * @param { HTMLElement } el dom元素\n * @param { String } className class名称\n * @example\n * hasClass(document.body, 'd-utils')\n */\nexport function hasClass(el: HTMLElement, className: string) {\n  return el.classList.contains(className);\n}\n/**\n* @description 判断元素是否存在某个class类\n* @param { HTMLElement } el dom元素\n* @param { String } className class名称\n* @example\n* hasClass(document.body, 'd-utils')\n*/\nexport function addClass(el: HTMLElement, className: string) {\n  if (Array.isArray(className)) {\n      className.forEach((item) => {\n          if (!hasClass(el, item)) {\n              el.classList.add(item);\n          }\n      });\n      return;\n  }\n  if (!hasClass(el, className)) {\n      el.classList.add(className);\n  }\n}\n/**\n* @description 元素删除class\n* @param { HTMLElement } el dom元素\n* @param { (String | Array) } className class名称，可以是多个\n* @example\n* removeClass(document.body, 'd-utils')\n*/\nexport function removeClass(el: HTMLElement, className: string) {\n  if (Array.isArray(className)) {\n      className.forEach((item) => {\n          if (hasClass(el, item)) {\n              el.classList.remove(item);\n          }\n      });\n      return;\n  }\n  if (hasClass(el, className)) {\n      el.classList.remove(className);\n  }\n}"]},"metadata":{},"sourceType":"module"}