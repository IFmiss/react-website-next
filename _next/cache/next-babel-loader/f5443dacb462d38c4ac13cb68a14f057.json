{"ast":null,"code":"var _jsxFileName = \"/Users/daiwei/pr/react-website-next/components/Music/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport cls from 'classnames';\nimport http from '@utils/req';\nimport { MUSIC_DETAIL } from '@constance/api';\nimport './music.less';\nimport loadable from '@loadable/component';\nconst Ripple = loadable(() => import('ripple-button'));\n\nconst Music = () => {\n  const {\n    0: tracksLists,\n    1: setTracksLists\n  } = useState([]);\n  const classString = cls('music-sider-wrapper');\n  useEffect(() => {\n    getMusic(2179377798);\n  }, []);\n\n  const getMusic = async id => {\n    const res = await http.get(`${MUSIC_DETAIL}?id=${id}`);\n    const {\n      playlist: {\n        tracks\n      }\n    } = res.data;\n    setTracksLists(tracks);\n  };\n\n  const checkMusic = item => {};\n\n  const formatMusicArtists = artists => {\n    return artists.map(artist => artist.name).join(', ');\n  };\n\n  const getUrlById = id => {\n    return `//music.163.com/song/media/outer/url?id=${id}.mp3`;\n  };\n\n  return __jsx(\"div\", {\n    className: classString,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    className: `${classString}-title`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"\\u97F3\\u4E50\"), __jsx(\"div\", {\n    className: `${classString}-content`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, tracksLists && tracksLists.map((item, index) => __jsx(Ripple, {\n    key: index,\n    color: \"rgba(99, 99, 99, 0.3)\",\n    onClick: checkMusic,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, item.name)))));\n};\n\nexport default Music;","map":{"version":3,"sources":["/Users/daiwei/pr/react-website-next/components/Music/index.tsx"],"names":["React","useEffect","useState","cls","http","MUSIC_DETAIL","loadable","Ripple","Music","tracksLists","setTracksLists","classString","getMusic","id","res","get","playlist","tracks","data","checkMusic","item","formatMusicArtists","artists","map","artist","name","join","getUrlById","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAO,cAAP;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAKA,MAAMC,MAAM,GAAGD,QAAQ,CAAC,MAAM,OAAO,eAAP,CAAP,CAAvB;;AAEA,MAAME,KAAK,GAAG,MAAM;AAClB,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCR,QAAQ,CAAM,EAAN,CAA9C;AACA,QAAMS,WAAW,GAAGR,GAAG,CAAC,qBAAD,CAAvB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAAC,UAAD,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,QAAQ,GAAG,MAAOC,EAAP,IAAsB;AACrC,UAAMC,GAAG,GAAG,MAAMV,IAAI,CAACW,GAAL,CAAU,GAAEV,YAAa,OAAMQ,EAAG,EAAlC,CAAlB;AACA,UAAM;AAAEG,MAAAA,QAAQ,EAAE;AAAEC,QAAAA;AAAF;AAAZ,QAA2BH,GAAG,CAACI,IAArC;AACAR,IAAAA,cAAc,CAACO,MAAD,CAAd;AACD,GAJD;;AAMA,QAAME,UAAU,GAAIC,IAAD,IAAe,CAEjC,CAFD;;AAIA,QAAMC,kBAAkB,GAAIC,OAAD,IAAsB;AAC/C,WAAOA,OAAO,CAACC,GAAR,CAAaC,MAAD,IAAoBA,MAAM,CAACC,IAAvC,EAA6CC,IAA7C,CAAkD,IAAlD,CAAP;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAId,EAAD,IAAgB;AACjC,WAAQ,2CAA0CA,EAAG,MAArD;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAEF,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAG,GAAEA,WAAY,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAK,IAAA,SAAS,EAAG,GAAEA,WAAY,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIF,WAAW,IAAIA,WAAW,CAACc,GAAZ,CAAgB,CAACH,IAAD,EAAkCQ,KAAlC,KAC7B,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,KAAb;AACQ,IAAA,KAAK,EAAC,uBADd;AAEQ,IAAA,OAAO,EAAET,UAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,IAAI,CAACK,IAAV,CAHF,CADa,CAFnB,CAFF,CADF;AAgBD,CA1CD;;AA4CA,eAAejB,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport cls from 'classnames'\nimport http from '@utils/req'\nimport { MUSIC_DETAIL } from '@constance/api'\nimport './music.less'\nimport loadable from '@loadable/component'\nimport {\n  artists\n} from './types'\n\nconst Ripple = loadable(() => import('ripple-button'))\n\nconst Music = () => {\n  const [tracksLists, setTracksLists] = useState<any>([])\n  const classString = cls('music-sider-wrapper')\n\n  useEffect(() => {\n    getMusic(2179377798)\n  }, [])\n\n  const getMusic = async (id: number) => {\n    const res = await http.get(`${MUSIC_DETAIL}?id=${id}`)\n    const { playlist: { tracks } } = res.data\n    setTracksLists(tracks)\n  }\n\n  const checkMusic = (item: any) => {\n\n  }\n\n  const formatMusicArtists = (artists: artists) => {\n    return artists.map((artist: artist) => artist.name).join(', ')\n  }\n\n  const getUrlById = (id: number) => {\n    return `//music.163.com/song/media/outer/url?id=${id}.mp3`\n  }  \n\n  return (\n    <div className={classString}>\n      <p className={`${classString}-title`}>音乐</p>\n      <div className={`${classString}-content`}>\n        {\n          tracksLists && tracksLists.map((item: { name: React.ReactNode }, index: number) => (\n            <Ripple key={index}\n                    color='rgba(99, 99, 99, 0.3)'\n                    onClick={checkMusic}>\n              <li>{item.name}</li>\n            </Ripple>\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Music\n"]},"metadata":{},"sourceType":"module"}