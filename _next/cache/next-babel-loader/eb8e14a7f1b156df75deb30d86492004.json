{"ast":null,"code":"import axios from 'axios'; // 200 成功\n// 100001 失败\n// 100002 超时\n\naxios.defaults.baseURL = 'https://www.daiwei.site/api';\naxios.defaults.timeout = 10000;\naxios.interceptors.request.use(function (config) {\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(function (res) {\n  // const data: IResInfo = res.data\n  if (!res) {\n    return Promise.reject('no response');\n  }\n\n  if (res.data && res.data.code !== 200) {\n    return Promise.reject(res);\n  }\n\n  return Promise.resolve(res);\n});\nexport default axios;","map":{"version":3,"sources":["/Users/daiwei/Sf/react-website-next/utils/req.ts"],"names":["axios","defaults","baseURL","timeout","interceptors","request","use","config","error","Promise","reject","response","res","data","code","resolve"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;;AAUAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,6BAAzB;AACAF,KAAK,CAACC,QAAN,CAAeE,OAAf,GAAyB,KAAzB;AAEAH,KAAK,CAACI,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,UAAAC,MAAM,EAAI;AACR,SAAOA,MAAP;AACD,CAHH,EAIE,UAAAC,KAAK,EAAI;AACP,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CANH;AASAR,KAAK,CAACI,YAAN,CAAmBO,QAAnB,CAA4BL,GAA5B,CAAgC,UAACM,GAAD,EAAmB;AAC/C;AACA,MAAI,CAACA,GAAL,EAAU;AACR,WAAOH,OAAO,CAACC,MAAR,CAAe,aAAf,CAAP;AACD;;AAED,MAAIE,GAAG,CAACC,IAAJ,IAAYD,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkB,GAAlC,EAAuC;AACrC,WAAOL,OAAO,CAACC,MAAR,CAAeE,GAAf,CAAP;AACD;;AAED,SAAOH,OAAO,CAACM,OAAR,CAAgBH,GAAhB,CAAP;AACD,CAXH;AAcA,eAAeZ,KAAf","sourcesContent":["import axios from 'axios'\n\n// 200 成功\n// 100001 失败\n// 100002 超时\n\ntype RES_CODE = 200 | 100001 | 100002\n\ninterface IResInfo<T> {\n  code: RES_CODE,\n  msg: string,\n  result: T\n}\n\naxios.defaults.baseURL = 'https://www.daiwei.site/api'\naxios.defaults.timeout = 10000\n\naxios.interceptors.request.use(\n  config => {\n    return config\n  },\n  error => {\n    return Promise.reject(error)\n  }\n)\n\naxios.interceptors.response.use((res: any): any => {\n    // const data: IResInfo = res.data\n    if (!res) {\n      return Promise.reject('no response')\n    }\n\n    if (res.data && res.data.code !== 200) {\n      return Promise.reject(res)\n    }\n  \n    return Promise.resolve(res)\n  }\n)\n\nexport default axios\n"]},"metadata":{},"sourceType":"module"}