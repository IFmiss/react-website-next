{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/daiwei/pr/react-website-next/components/SiderWarp/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef, useState, useEffect, useImperativeHandle } from 'react';\nimport classNames from 'classnames';\nimport { PROJECT_NAME } from '@constance/index';\nimport './sider-warp.less';\nimport { isAppleDevice } from '@utils/utils';\nimport { addClass, removeClass } from '@root/utils/utils';\n\nvar SiderWarp = function SiderWarp(props, ref) {\n  var _classNames;\n\n  var siderRef = useRef(null);\n  var _props$name = props.name,\n      name = _props$name === void 0 ? '菜单' : _props$name,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'right' : _props$type;\n\n  var _useState = useState(props.show || true),\n      show = _useState[0],\n      setShow = _useState[1];\n\n  var classString = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(PROJECT_NAME, \"-comp-sider-warp\"), true), _defineProperty(_classNames, \"show\", show), _defineProperty(_classNames, \"\".concat(type), true), _classNames));\n  var classWrap = classNames(_defineProperty({}, \"\".concat(PROJECT_NAME, \"-comp-sider-warp\"), true));\n  useEffect(function () {\n    if (show) {\n      addClass(document.getElementById('dw-next-container'), \"sider-warp-\".concat(type));\n    } else {\n      removeClass(document.getElementById('dw-next-container'), \"sider-warp-\".concat(type));\n    }\n  }, [show]);\n  useEffect(function () {\n    if (isAppleDevice() && siderRef.current) {\n      addClass(siderRef.current, 'blur');\n    }\n  }, []);\n\n  var hideComp = function hideComp() {\n    setShow(function (show) {\n      return show = false;\n    });\n    props.hideFn && props.hideFn();\n  };\n\n  var showComp = function showComp() {\n    setShow(function (show) {\n      return show = true;\n    });\n    props.showFn && props.showFn();\n  };\n\n  var toggleSiderWarp = function toggleSiderWarp() {\n    show ? props.hideFn && props.hideFn() : props.showFn && props.showFn();\n    setShow(function (show) {\n      return show = !show;\n    });\n  };\n\n  useImperativeHandle(ref, function () {\n    return {\n      showComp: showComp,\n      hideComp: hideComp\n    };\n  });\n  return __jsx(\"section\", {\n    className: classString,\n    ref: siderRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"\".concat(classWrap, \"-mask\"),\n    onClick: hideComp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"\".concat(classWrap, \"-content\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"\".concat(classWrap, \"-content-title\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, name), __jsx(\"div\", {\n    className: \"\".concat(classWrap, \"-content-wrapper\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"asdasdasd\")));\n};\n\nvar SiderWarpComponent = React.forwardRef(SiderWarp);\nexport default SiderWarpComponent;","map":{"version":3,"sources":["/Users/daiwei/pr/react-website-next/components/SiderWarp/index.tsx"],"names":["React","useRef","useState","useEffect","useImperativeHandle","classNames","PROJECT_NAME","isAppleDevice","addClass","removeClass","SiderWarp","props","ref","siderRef","name","type","show","setShow","classString","classWrap","document","getElementById","current","hideComp","hideFn","showComp","showFn","toggleSiderWarp","SiderWarpComponent","forwardRef"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useImperativeHandle, ReactElement, useMemo } from 'react'\nimport classNames from 'classnames'\nimport { PROJECT_NAME } from '@constance/index'\nimport './sider-warp.less'\nimport Menu from './menu.svg'\nimport {\n  isAppleDevice\n} from '@utils/utils'\nimport { addClass, removeClass } from '@root/utils/utils'\n\ninterface ISiderWarpProps {\n  show: boolean;\n  type: SiderPosition;\n  name: string | ReactElement;\n  hideFn?: () => void;\n  showFn?: () => void;\n}\n\ninterface ISiderWrapRef {\n  showComp: () => void;\n  hideComp: () => void;\n}\n\ntype SiderType = 'fixed' | 'auto'\n\ntype SiderPosition = 'right' | 'left' | 'bottom'\n\nconst SiderWarp: React.ForwardRefRenderFunction<ISiderWrapRef, ISiderWarpProps> = (props, ref) => {\n  const siderRef = useRef<HTMLElement>(null)\n  const { name = '菜单', type = 'right' } = props\n  const [show, setShow] = useState<boolean>(props.show || true)\n\n  const classString = classNames({\n    [`${PROJECT_NAME}-comp-sider-warp`]: true,\n    [`show`]: show,\n    [`${type}`]: true\n  })\n  \n  const classWrap = classNames({\n    [`${PROJECT_NAME}-comp-sider-warp`]: true\n  })\n\n  useEffect(() => {\n    if (show) {\n      addClass(document.getElementById('dw-next-container') as HTMLElement, `sider-warp-${type}`)\n    } else {\n      removeClass(document.getElementById('dw-next-container') as HTMLElement, `sider-warp-${type}`)\n    }\n  }, [show])\n\n  useEffect(() => {\n    if (isAppleDevice() && siderRef.current) {\n      addClass(siderRef.current, 'blur')\n    }\n  }, [])\n\n  const hideComp = () => {\n    setShow((show) => show = false)\n    props.hideFn && props.hideFn()\n  }\n\n  const showComp = () => {\n    setShow((show) => show = true)\n    props.showFn && props.showFn()\n  }\n\n  const toggleSiderWarp = () => {\n    show ? props.hideFn && props.hideFn() : props.showFn && props.showFn()\n    setShow((show) => show = !show)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      showComp,\n      hideComp\n    }\n  })\n\n  return (\n    <section className={classString} ref={siderRef}>\n      <div className={`${classWrap}-mask`} onClick={hideComp}></div>\n      <div className={`${classWrap}-content`}>\n        <div className={`${classWrap}-content-title`}>{\n          name\n        }</div>\n        <div className={`${classWrap}-content-wrapper`}>\n          {/* {props.children} */}\n          asdasdasd\n        </div>\n      </div>\n    </section>\n  )\n}\n\nconst SiderWarpComponent = React.forwardRef(SiderWarp)\n\nexport default SiderWarpComponent as any"]},"metadata":{},"sourceType":"module"}