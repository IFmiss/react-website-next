{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Layout from '@components/Layout';\nimport BlogList from '@module/blog.list';\nimport classNames from 'classnames';\nimport { PROJECT_NAME } from '@constance/index';\nimport { ARTICLE_LISTS } from '@constance/api';\nimport './blog.less';\nimport http from '@utils/req';\n\nvar Blog = function Blog(_ref) {\n  var lists = _ref.blogInfo.lists;\n  var classString = classNames(_defineProperty({}, \"\".concat(PROJECT_NAME, \"-blog\"), true));\n  useEffect(function () {}, []);\n  return __jsx(Layout, null, lists && lists.length && lists.map(function (item) {\n    return __jsx(BlogList, {\n      list: item,\n      key: item.id\n    });\n  }));\n};\n\nBlog.getInitialProps = function _callee(ctx) {\n  var res;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(http.get(\"\".concat(ARTICLE_LISTS), {\n            params: {\n              page: '0',\n              size: '666',\n              type: '全部'\n            }\n          }));\n\n        case 2:\n          res = _context.sent;\n          return _context.abrupt(\"return\", {\n            blogInfo: res.data && res.data.result || {}\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\n\nexport default Blog;","map":{"version":3,"sources":["/Users/daiwei/pr/react-website-next/pages/blog/index.tsx"],"names":["React","useEffect","Layout","BlogList","classNames","PROJECT_NAME","ARTICLE_LISTS","http","Blog","lists","blogInfo","classString","length","map","item","id","getInitialProps","ctx","get","params","page","size","type","res","data","result"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAIA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,QAAP,MAEO,mBAFP;AAGA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SACEC,YADF,QAEO,kBAFP;AAIA,SACEC,aADF,QAEO,gBAFP;AAIA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAcA,IAAMC,IAA6B,GAAG,SAAhCA,IAAgC,OAA6B;AAAA,MAAdC,KAAc,QAA1BC,QAA0B,CAAdD,KAAc;AACjE,MAAME,WAAW,GAAGP,UAAU,+BACxBC,YADwB,YACF,IADE,EAA9B;AAIAJ,EAAAA,SAAS,CAAC,YAAM,CACf,CADQ,EACN,EADM,CAAT;AAGA,SACE,MAAC,MAAD,QAEIQ,KAAK,IAAIA,KAAK,CAACG,MAAf,IAAyBH,KAAK,CAACI,GAAN,CAAU,UAAAC,IAAI;AAAA,WACrC,MAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAsB,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAhC,MADqC;AAAA,GAAd,CAF7B,CADF;AASD,CAjBD;;AAmBAP,IAAI,CAACQ,eAAL,GAAuB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHV,IAAI,CAACW,GAAL,WAAYZ,aAAZ,GAA6B;AAC7Ca,YAAAA,MAAM,EAAE;AAAEC,cAAAA,IAAI,EAAE,GAAR;AAAaC,cAAAA,IAAI,EAAE,KAAnB;AAA0BC,cAAAA,IAAI,EAAE;AAAhC;AADqC,WAA7B,CADG;;AAAA;AACfC,UAAAA,GADe;AAAA,2CAId;AACLb,YAAAA,QAAQ,EAAEa,GAAG,CAACC,IAAJ,IAAYD,GAAG,CAACC,IAAJ,CAASC,MAArB,IAA+B;AADpC,WAJc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AASA,eAAejB,IAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport {\n  NextPage\n} from 'next'\nimport Layout from '@components/Layout'\nimport BlogList, {\n  IBlogList\n} from '@module/blog.list'\nimport classNames from 'classnames'\nimport {\n  PROJECT_NAME\n} from '@constance/index'\n\nimport {\n  ARTICLE_LISTS\n} from '@constance/api'\n\nimport './blog.less'\nimport http from '@utils/req'\n\ninterface BlogListReqData {\n  lists: Array<IBlogList>\n  total: number\n  offset: number\n  size: number\n  type: string\n}\n\ninterface BlogProps {\n  blogInfo: BlogListReqData\n}\n\nconst Blog: NextPage<BlogProps, {}> = ({ blogInfo: { lists } }) => {\n  const classString = classNames({\n    [`${PROJECT_NAME}-blog`]: true\n  })\n\n  useEffect(() => {\n  }, [])\n\n  return (\n    <Layout>\n      {\n        lists && lists.length && lists.map(item => (\n          <BlogList list={item} key={item.id}/>\n        ))\n      }\n    </Layout>\n  )\n}\n\nBlog.getInitialProps = async (ctx) => {\n  const res = await http.get(`${ARTICLE_LISTS}`, {\n    params: { page: '0', size: '666', type: '全部' }\n  })\n  return {\n    blogInfo: res.data && res.data.result || {}\n  }\n}\n\nexport default Blog\n"]},"metadata":{},"sourceType":"module"}