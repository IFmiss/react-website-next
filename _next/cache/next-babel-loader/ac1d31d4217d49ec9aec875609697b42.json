{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { PROJECT_NAME, SVG_DEFAULT_COLOR } from '@constance/index';\nimport './icon.less';\n\nconst Icon = props => {\n  const {\n    0: color,\n    1: setColor\n  } = useState(props.active ? props.activeColor : props.color || SVG_DEFAULT_COLOR);\n  const svgStyle = {\n    'width': `${props.size ? props.size : 16}px`,\n    'height': `${props.size ? props.size : 16}px`,\n    'marginRight': props.children ? '5px' : '0'\n  };\n  const classString = classNames({\n    [`${PROJECT_NAME}-comp-icon`]: true\n  });\n\n  const setHover = () => {\n    if (props.hoverColor) {\n      setColor(color => color = props.hoverColor);\n      return true;\n    }\n\n    return false;\n  };\n\n  const setDefault = () => {\n    if (props.hoverColor) {\n      setColor(color => color = props.color || SVG_DEFAULT_COLOR);\n      return true;\n    }\n\n    return false;\n  };\n\n  const mouseEnter = () => {\n    setHover();\n  };\n\n  const mouseLeave = () => {\n    setDefault();\n  };\n\n  return __jsx(\"div\", {\n    className: classString\n  }, __jsx(\"svg\", {\n    style: svgStyle,\n    onMouseEnter: mouseEnter,\n    onMouseLeave: mouseLeave\n  }, __jsx(\"use\", {\n    xlinkHref: `#${props.svgId}`,\n    fill: color\n  })), props.children);\n};\n\nexport default Icon;","map":{"version":3,"sources":["/Users/daiwei/pr/react-website-next/components/Icon/index.tsx"],"names":["React","useState","classNames","PROJECT_NAME","SVG_DEFAULT_COLOR","Icon","props","color","setColor","active","activeColor","svgStyle","size","children","classString","setHover","hoverColor","setDefault","mouseEnter","mouseLeave","svgId"],"mappings":";AAAA,OAAOA,KAAP,IACEC,QADF,QAEO,OAFP;AAGA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SACEC,YADF,EAEEC,iBAFF,QAGO,kBAHP;AAIA,OAAO,aAAP;;AAWA,MAAMC,IAA0B,GAAIC,KAAD,IAAW;AAC5C,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAeK,KAAK,CAACG,MAAN,GAAeH,KAAK,CAACI,WAArB,GAAoCJ,KAAK,CAACC,KAAN,IAAeH,iBAAlE,CAAlC;AAEA,QAAMO,QAAa,GAAG;AACpB,aAAU,GAAGL,KAAK,CAACM,IAAN,GAAaN,KAAK,CAACM,IAAnB,GAA0B,EAAI,IADvB;AAEpB,cAAW,GAAGN,KAAK,CAACM,IAAN,GAAaN,KAAK,CAACM,IAAnB,GAA0B,EAAI,IAFxB;AAGpB,mBAAeN,KAAK,CAACO,QAAN,GAAiB,KAAjB,GAAyB;AAHpB,GAAtB;AAMA,QAAMC,WAAW,GAAGZ,UAAU,CAAC;AAC7B,KAAE,GAAEC,YAAa,YAAjB,GAA+B;AADF,GAAD,CAA9B;;AAIA,QAAMY,QAAQ,GAAG,MAAe;AAC9B,QAAIT,KAAK,CAACU,UAAV,EAAsB;AACpBR,MAAAA,QAAQ,CAAED,KAAD,IAAgBA,KAAK,GAAGD,KAAK,CAACU,UAA/B,CAAR;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GAND;;AAQA,QAAMC,UAAU,GAAG,MAAe;AAChC,QAAIX,KAAK,CAACU,UAAV,EAAsB;AACpBR,MAAAA,QAAQ,CAAED,KAAD,IAAgBA,KAAK,GAAGD,KAAK,CAACC,KAAN,IAAeH,iBAAxC,CAAR;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GAND;;AAQA,QAAMc,UAAU,GAAG,MAAM;AACvBH,IAAAA,QAAQ;AACT,GAFD;;AAIA,QAAMI,UAAU,GAAG,MAAM;AACvBF,IAAAA,UAAU;AACX,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAEH;AAAhB,KACE;AAAK,IAAA,KAAK,EAAEH,QAAZ;AAAsB,IAAA,YAAY,EAAEO,UAApC;AAAgD,IAAA,YAAY,EAAEC;AAA9D,KACE;AAAK,IAAA,SAAS,EAAG,IAAGb,KAAK,CAACc,KAAM,EAAhC;AAAmC,IAAA,IAAI,EAAEb;AAAzC,IADF,CADF,EAIGD,KAAK,CAACO,QAJT,CADF;AAQD,CA7CD;;AA+CA,eAAeR,IAAf","sourcesContent":["import React, {\n  useState\n} from 'react'\nimport classNames from 'classnames'\nimport {\n  PROJECT_NAME,\n  SVG_DEFAULT_COLOR\n} from '@constance/index'\nimport './icon.less'\n\ninterface IIconProps {\n  svgId: string;\n  size?: number;\n  color?: string;\n  hoverColor?: string;\n  activeColor?: string;\n  active?: boolean;\n}\n\nconst Icon: React.FC<IIconProps> = (props) => {\n  const [color, setColor] = useState<string | any>(props.active ? props.activeColor : (props.color || SVG_DEFAULT_COLOR))\n\n  const svgStyle: any = {\n    'width': `${ props.size ? props.size : 16 }px`,\n    'height': `${ props.size ? props.size : 16 }px`,\n    'marginRight': props.children ? '5px' : '0'\n  }\n\n  const classString = classNames({\n    [`${PROJECT_NAME}-comp-icon`]: true\n  })\n\n  const setHover = (): boolean => {\n    if (props.hoverColor) {\n      setColor((color: any) => color = props.hoverColor)\n      return true\n    }\n    return false\n  }\n\n  const setDefault = (): boolean => {\n    if (props.hoverColor) {\n      setColor((color: any) => color = props.color || SVG_DEFAULT_COLOR)\n      return true\n    }\n    return false\n  }\n\n  const mouseEnter = () => {\n    setHover()\n  }\n\n  const mouseLeave = () => {\n    setDefault()\n  }\n\n  return (\n    <div className={classString}>\n      <svg style={svgStyle} onMouseEnter={mouseEnter} onMouseLeave={mouseLeave}>\n        <use xlinkHref={`#${props.svgId}`} fill={color}></use>\n      </svg>\n      {props.children}\n    </div>\n  )\n}\n\nexport default Icon\n"]},"metadata":{},"sourceType":"module"}