{"ast":null,"code":"var _jsxFileName = \"/Users/daiwei/pr/react-website-next/pages/blog/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Layout from '@components/Layout';\nimport BlogList from '@module/blog.list';\nimport classNames from 'classnames';\nimport { PROJECT_NAME } from '@constance/index';\nimport { ARTICLE_LISTS } from '@constance/api';\nimport BaseAction from '@root/store/actions/base';\nimport './blog.less';\nimport http from '@utils/req';\nimport { connect } from 'react-redux';\n\nconst Blog = props => {\n  const {\n    blogInfo: {\n      lists\n    }\n  } = props;\n  const classString = classNames({\n    [`${PROJECT_NAME}-blog`]: true\n  });\n  useEffect(() => {\n    props.setContainerEle('a');\n  }, []);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classString,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, lists && lists.length && lists.map(item => __jsx(BlogList, {\n    list: item,\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))));\n};\n\nBlog.getInitialProps = async ctx => {\n  const res = await http.get(`${ARTICLE_LISTS}`, {\n    params: {\n      page: '0',\n      size: '666',\n      type: '全部'\n    }\n  });\n  return {\n    blogInfo: res.data && res.data.result || {}\n  };\n};\n\nconst mapState = state => ({\n  containerEle: state.base.containerEle\n});\n\nconst mapDispatch = BaseAction;\nBlog.defaultProps = {\n  setContainerEle: () => {},\n  containerEle: null\n};\nexport default connect(mapState, mapDispatch)(Blog);","map":{"version":3,"sources":["/Users/daiwei/pr/react-website-next/pages/blog/index.tsx"],"names":["React","useEffect","Layout","BlogList","classNames","PROJECT_NAME","ARTICLE_LISTS","BaseAction","http","connect","Blog","props","blogInfo","lists","classString","setContainerEle","length","map","item","id","getInitialProps","ctx","res","get","params","page","size","type","data","result","mapState","state","containerEle","base","mapDispatch","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAIA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,QAAP,MAEO,mBAFP;AAGA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SACEC,YADF,QAEO,kBAFP;AAIA,SACEC,aADF,QAEO,gBAFP;AAQA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAgBA,MAAMC,IAA6B,GAAIC,KAAD,IAAW;AAC/C,QAAM;AAAEC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA;AAAF;AAAZ,MAA0BF,KAAhC;AACA,QAAMG,WAAW,GAAGV,UAAU,CAAC;AAC7B,KAAE,GAAEC,YAAa,OAAjB,GAA0B;AADG,GAAD,CAA9B;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAACI,eAAN,CAAsB,GAAtB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAED,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEID,KAAK,IAAIA,KAAK,CAACG,MAAf,IAAyBH,KAAK,CAACI,GAAN,CAAUC,IAAI,IACrC,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADuB,CAF7B,CADF,CADF;AAWD,CArBD;;AAuBAT,IAAI,CAACU,eAAL,GAAuB,MAAOC,GAAP,IAAe;AACpC,QAAMC,GAAG,GAAG,MAAMd,IAAI,CAACe,GAAL,CAAU,GAAEjB,aAAc,EAA1B,EAA6B;AAC7CkB,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,IAAI,EAAE,KAAnB;AAA0BC,MAAAA,IAAI,EAAE;AAAhC;AADqC,GAA7B,CAAlB;AAGA,SAAO;AACLf,IAAAA,QAAQ,EAAEU,GAAG,CAACM,IAAJ,IAAYN,GAAG,CAACM,IAAJ,CAASC,MAArB,IAA+B;AADpC,GAAP;AAGD,CAPD;;AASA,MAAMC,QAAQ,GAAIC,KAAD,KAAoB;AACnCC,EAAAA,YAAY,EAAED,KAAK,CAACE,IAAN,CAAWD;AADU,CAApB,CAAjB;;AAIA,MAAME,WAAW,GAAG3B,UAApB;AAEAG,IAAI,CAACyB,YAAL,GAAoB;AAClBpB,EAAAA,eAAe,EAAE,MAAM,CAAE,CADP;AAElBiB,EAAAA,YAAY,EAAE;AAFI,CAApB;AAKA,eAAevB,OAAO,CAACqB,QAAD,EAAWI,WAAX,CAAP,CAA+BxB,IAA/B,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport {\n  NextPage\n} from 'next'\nimport Layout from '@components/Layout'\nimport BlogList, {\n  IBlogList\n} from '@module/blog.list'\nimport classNames from 'classnames'\nimport {\n  PROJECT_NAME\n} from '@constance/index'\n\nimport {\n  ARTICLE_LISTS\n} from '@constance/api'\n\nimport { \n  IStore\n} from '@store/types';\n\nimport BaseAction from '@root/store/actions/base'\n\nimport './blog.less'\nimport http from '@utils/req'\nimport { connect } from 'react-redux'\n\ninterface BlogListReqData {\n  lists: Array<IBlogList>\n  total: number\n  offset: number\n  size: number\n  type: string\n}\n\ninterface BlogProps {\n  blogInfo: BlogListReqData\n  containerEle: any,\n  setContainerEle: (ele: any) => void\n}\n\nconst Blog: NextPage<BlogProps, {}> = (props) => {\n  const { blogInfo: { lists } } = props\n  const classString = classNames({\n    [`${PROJECT_NAME}-blog`]: true\n  })\n\n  useEffect(() => {\n    props.setContainerEle('a')\n  }, [])\n\n  return (\n    <Layout>\n      <div className={classString}>\n        {\n          lists && lists.length && lists.map(item => (\n            <BlogList list={item} key={item.id}/>\n          ))\n        }\n      </div>\n    </Layout>\n  )\n}\n\nBlog.getInitialProps = async (ctx) => {\n  const res = await http.get(`${ARTICLE_LISTS}`, {\n    params: { page: '0', size: '666', type: '全部' }\n  })\n  return {\n    blogInfo: res.data && res.data.result || {}\n  }\n}\n\nconst mapState = (state: IStore) => ({ \n  containerEle: state.base.containerEle\n })\n\nconst mapDispatch = BaseAction\n\nBlog.defaultProps = {\n  setContainerEle: () => {},\n  containerEle: null\n}\n\nexport default connect(mapState, mapDispatch)(Blog)\n"]},"metadata":{},"sourceType":"module"}