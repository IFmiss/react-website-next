{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/daiwei/pr/react-website-next/pages/_error.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar Error = function Error(props) {\n  console.log('err', props);\n  return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.statusCode ? \"An error \".concat(props.statusCode, \" occurred on server\") : 'An error occurred on client');\n};\n\nError.getInitialProps = function _callee(_ref) {\n  var res, err, statusCode;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          res = _ref.res, err = _ref.err;\n          statusCode = res ? res.statusCode : err ? err.statusCode : 404;\n          return _context.abrupt(\"return\", {\n            statusCode: statusCode\n          });\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Error;","map":{"version":3,"sources":["/Users/daiwei/pr/react-website-next/pages/_error.tsx"],"names":["Error","props","console","log","statusCode","getInitialProps","res","err"],"mappings":";;;;;AAIA,IAAMA,KAAyB,GAAG,SAA5BA,KAA4B,CAACC,KAAD,EAAW;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,KAAnB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACG,UAAN,sBACeH,KAAK,CAACG,UADrB,2BAEG,6BAHN,CADF;AAOD,CATD;;AAWAJ,KAAK,CAACK,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,QAASA,GAAT,EAAcC,GAAd,QAAcA,GAAd;AAChBH,UAAAA,UADgB,GACHE,GAAG,GAAGA,GAAG,CAACF,UAAP,GAAoBG,GAAG,GAAGA,GAAG,CAACH,UAAP,GAAoB,GAD3C;AAAA,2CAEf;AAAEA,YAAAA,UAAU,EAAVA;AAAF,WAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAKA,eAAeJ,KAAf","sourcesContent":["import {\n  NextPage\n} from 'next'\n\nconst Error: NextPage<any, any> = (props) => {\n  console.log('err', props)\n  return (\n    <p>\n      {props.statusCode\n        ? `An error ${props.statusCode} occurred on server`\n        : 'An error occurred on client'}\n    </p>\n  )\n}\n\nError.getInitialProps = async ({ res, err }) => {\n  const statusCode = res ? res.statusCode : err ? err.statusCode : 404\n  return { statusCode }\n}\n\nexport default Error"]},"metadata":{},"sourceType":"module"}